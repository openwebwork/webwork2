&DOCUMENT();
loadMacros("PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
); 
######################################################### 
# allow the student to change the seed for this problem.

$newProblemSeed = ( defined( ${$inputs_ref}{'newProblemSeed'} ) )?  ${$inputs_ref}{'newProblemSeed'} : $problemSeed;
$PG_random_generator->srand($newProblemSeed);
BEGIN_TEXT
To see a different version of the problem change
the problem seed and press the 'Submit Answer' button below.$PAR Problem Seed:
\{  MODES(
TeX			=>	qq! Change the problem seed to change the problem:$problemSeed!,
Latex2HTML	=>	qq! Change the problem seed to change the problem:
    \begin{rawhtml}
    <INPUT NAME="newProblemSeed" VALUE = "$newProblemSeed" SIZE = "10">
    \end{rawhtml}!,
HTML		=>	qq! <INPUT NAME="newProblemSeed" VALUE = "$newProblemSeed" SIZE = "10">!
)
\}
END_TEXT
#########################################################
# define function to be evaluated
$a= random(1,3,1);
$b= random(-4,4,.1);
$c = random(-4,4,1);
$x0=random(-2,2,1);
$function = FEQ(" ${a}x^2+${b}x +$c ");
sub fp {   # define a subroutine to calculate the derivative
	my $x = shift;
	2*$a*$x+$b;
}
$ans = fp($x0);
HEADER_TEXT(<<EOF);
<SCRIPT LANGUAGE="JavaScript">
<!-- This script and many more are available online from -->
<!-- The JavaScript Source!! http://javascriptsource.com -->

<!-- Begin

function func(x) {
return( $a*Math.pow(x,2) + $b*x +$c );}

// End 
 -->
</SCRIPT>

EOF


TEXT(beginproblem());
TEXT(MODES(
TeX	 		=>	'',
Latex2HTML	=> "\begin{rawhtml} <NOSCRIPT> This problem requires that Java
 				Script be enabled </NOSCRIPT> \end{rawhtml}",
HTML		=> "<NOSCRIPT> This problem requires that Java Script be 
				enabled </NOSCRIPT>"
));

BEGIN_TEXT
$PAR
This problem illustrates how you can embed JavaScript code in a WeBWorK example
to create an interactive homework problem that could never be provided by a text book.
$PAR
WeBWorK can use existing $BBOLD JavaScript$EBOLD  and $BBOLD Java $EBOLD code to augment its capabilities.
$HR
$PAR
By typing any value x into the left hand window and pressing the --f--\(>\) button 
you can determine the value of f(x). 
$PAR
Using this 'oracle' function, calculate the derivative of \( f \) at x=$x0.
$PAR
\(f'($x0) =\) \{ans_rule(20) \}  You can use a 
\{htmlLink(alias('calc.html'), "calculator" ,q!TARGET = "calculator"!) \}

$PAR
END_TEXT

$javaScript =<<ENDOFSCRIPT;
<CENTER>
<TABLE BORDER=4>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input1"  Value = "$x0" Size="20">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->"  
            OnClick="this.form.Output1.value=func(this.form.Input1.value)">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output1"   Size="20">
</TD>
</TR>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input2"  Value = "$x0" Size="20">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->"  
            OnClick="this.form.Output2.value=func(this.form.Input2.value)">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output2"   Size="20">
</TD>
</TR>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input3"  Value = "$x0" Size="20">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->"  
            OnClick="this.form.Output3.value=func(this.form.Input3.value)">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output3"   Size="20">
</TD>
</TR>
</TABLE>

</CENTER>
ENDOFSCRIPT

TEXT(M3(
     " \fbox{ The java Script calculator was displayed here
             }",
     "\begin{rawhtml} $javaScript \end{rawhtml}",
      $javaScript
      ));



ANS(std_num_cmp($ans,1,"%0.14g") );  #We are allowing 1 percent error for the answer.

			
&ENDDOCUMENT;

