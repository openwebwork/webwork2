################################################################################
# WeBWorK Online Homework Delivery System
# Copyright Â© 2000-2010 The WeBWorK Project, http://openwebwork.sf.net/
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

# This file configures Apache to handle requests for WeBWorK. To install WeBWorK
# support in your Apache configuration, add the following line to the end of
# your Apache configuration file (usually apache.conf or httpd.conf):
# 
#     Include /path/to/webwork.apache2-config
# 
# Customize the variable $webwork_dir below to match the location of your
# WeBWorK installation.
# 
# ATTENTION APACHE 2.2 USERS: There is a bug in mod_perl 2.0.2 that prevents the
#                             FollowSymlinksOption from working when specified
#                             in a <Perl> section. See below for workaround.


# Uncomment the ScriptAliasMatch to allow access to show-source.cgi
# This allows the "show source" button to work for demonstration "courses"
# See for example Davide Cervone's Knoxville lectures on math objects
# It requires that a show-source.cgi script be customized and placed in 
# the myCourse/html  directory of the course
# The "show source" button is most useful for webwork "courses" used to train new authors
# It is not desirable to expose the code of regular homework questions to students

ScriptAliasMatch /webwork2_course_files/([^/]*)/show-source.cgi/(.*) /opt/webwork/courses/$1/html/show-source.cgi/$2

PerlChildInitHandler "sub { srand }"

PerlModule mod_perl2

PerlPassEnv MIN_HTML_ERRORS
PerlPassEnv JSON_ERROR_LOG

<Perl>

#################################################################
# Set this variable to the path to your WeBWorK installation.
#################################################################

my $webwork_dir = "/opt/webwork/webwork2";
# Cache this value for use by other scripts not necessarily in the Apache2 hierarchy
# Different scripts use different locations :-)

$ENV{WEBWORK_ROOT} = $webwork_dir;
$WeBWorK::SeedCE{webwork_dir} = $webwork_dir;
$WeBWorK::Constants::WEBWORK_DIRECTORY = $webwork_dir;

#################################################################
# The following code reads defauls.config and extracts the remaining configuration
# variables. There is no need to modify it.
#################################################################

# link to WeBWorK code libraries
eval "use lib '$webwork_dir/lib'"; die $@ if $@;
eval "use WeBWorK::CourseEnvironment"; die $@ if $@;

# grab course environment (by reading webwork2/conf/defaults.config)
my $ce = new WeBWorK::CourseEnvironment({ webwork_dir => $webwork_dir });

die "webwork.apach2-config: Can't establish initial Course environment" unless ref($ce);

#  set important configuration variables (from defaults.config)

my $webwork_url = $ce->{webwork_url};                    # e.g.  /webwork2
my $pg_dir = $ce->{pg_dir};                              # e.g.  /opt/webwork/pg         
my $webwork_htdocs_url = $ce->{webwork_htdocs_url};      # e.g.  /webwork2_files
my $webwork_htdocs_dir = $ce->{webwork_htdocs_dir};      # e.g.  /opt/webwork/webwork2/htdocs
my $webwork_courses_url = $ce->{webwork_courses_url};    # e.g.  /webwork2_course_files
my $webwork_courses_dir = $ce->{webwork_courses_dir};    # e.g.  /opt/webwork/courses

my $webwork_server_admin_email = $ce->{webwork_server_admin_email};
if ($webwork_server_admin_email) {
	print "webwork.apache2-config: webwork_server_admin_email for reporting bugs has been set to $webwork_server_admin_email in site.conf\n";
} else {
	$webwork_server_admin_email= $ENV{SERVER_ADMIN};
}
$ENV{WEBWORK_SERVER_ADMIN} = $webwork_server_admin_email;

# link to PG code libraries
eval "use lib '$pg_dir/lib'"; die $@ if $@;
$WeBWorK::Constants::PG_DIRECTORY = $pg_dir;
$ENV{PG_ROOT} = $pg_dir;

#################################################################
# Modify the manner in which errors are reported.
# Uncommenting $ENV{MIN_HTML_ERRORS} = 1; will minimize the data provided
#    on HTML error pages, which some security reviews request, as in particular
#    the older output provided backtrace information which could help idenfify
#    the code and version of the code being used on the server.
#    The useful information will be in the Apache error.log file, with a UID
#    displayed also in the HTML error page to help match up records.
# Warning: The Apache error.log is available to system adminstrators but not to
#    users with staff level accounts in the courses, so using the more secure
#    settings requires more cooperation from the system administrators when
#    debugging data is needed.
# Uncommenting $ENV{JSON_ERROR_LOG} = 1; will change the output format in the
#    Apache error.log file to be JSON based, which will make programmatic
#    processing of the error reports easier, but can break the functionality
#    of existing scripts which parse error.log.
#################################################################

#$ENV{MIN_HTML_ERRORS} = 1;
#$ENV{JSON_ERROR_LOG} = 1;

#################################################################
# report server setup when child process starts up -- for example when restarting the server
#################################################################
print "webwork.apache2-config:  WeBWorK server is starting\n";
print "webwork.apache2-config:  WeBWorK root directory set to $webwork_dir in webwork2/conf/webwork.apache2-config\n";
print "webwork.apache2-config:  The following locations and urls are set in webwork2/conf/site.conf\n";
print "webwork.apache2-config:  PG root directory set to $pg_dir\n";
print "webwork.apache2-config:  WeBWorK server userID is ", $ce->{server_userID}, "\n";
print "webwork.apache2-config:  WeBWorK server groupID is ", $ce->{server_groupID}, "\n";
print "webwork.apache2-config:  The webwork url on this site is ", $ce->{server_root_url},"$webwork_url\n";
print "webwork.apache2-config:  The webwork smtp server address is ", $ce->{mail}{smtpServer},"\n";
print "webwork.apache2-config:     The webwork smtp server port is $ce->{mail}->{smtpPort}\n";
print "webwork.apache2-config:     The webwork smtp server protocol is ", ($ce->{mail}->{tls_allow})?"'ssl'":"'not ssl'","\n";

# check compatibility of sendmail protocols and ports
if (exists(($ce->{mail}->{smtpPort})) )  { # port not chosen automatically
   # check port and protocol for compatibility
	unless ( 
			(($ce->{mail}->{smtpPort} == 25)  # 'not ssl mode'
			  and ($ce->{mail}->{tls_allow} == 0)) 
			or 
			(($ce->{mail}->{smtpPort} == 465) # 'ssl mode'
			  and ($ce->{mail}->{tls_allow} == 1) ) 
			) {
		warn "WARNING:: The smtp port and the smtp protocol do not appear to be compatible";
	}

}



require Apache::WeBWorK; # force compilation of pretty much everything

# At this point, the following configuration variables should be present for use
# in wiring WeBWorK into Apache:
# 
#     $webwork_url            The base URL handled by Apache::WeBWorK.
#     $webwork_dir            The path to the base webwork2 directory.
#     $pg_dir                 The path to the base pg directory.
#     
#     $webwork_htdocs_url     The base URL of the WeBWorK htdocs directory.
#     $webwork_htdocs_dir     The path to the WeBWorK htdocs directory.
#     
#     $webwork_courses_url    The base URL of the WeBWorK courses directory.
#     $webwork_courses_dir    The path to the WeBWorK courses directory.

# Define the location that is handled by the Apache::WeBWorK module, and tell
# Perl where to find the libraries Apache::WeBWorK needs to run.
# 
$Location{$webwork_url} = {
	SetHandler => "perl-script",
	PerlHandler => "Apache::WeBWorK",
};

# Provide access to system-wide resources.
# 
push @Alias, [ $webwork_htdocs_url => $webwork_htdocs_dir ];
$Directory{$webwork_htdocs_dir} = {
        Require => "all granted",
	Options => "FollowSymLinks",
	AllowOverride => "none",
};

# Provide access to course-specific resources.
# 
push @AliasMatch, [ "$webwork_courses_url/([^/]*)/(.*)", "$webwork_courses_dir/\$1/html/\$2" ];
$Directory{"$webwork_courses_dir/*/html"} = {
        Require => "all granted",
	Options => "FollowSymLinks",
	AllowOverride => "none",
};

# If WeBWorK is on the root, exempt the static directories from being handled
# by Apache::WeBWorK.
# 
if ($webwork_url eq "") {
	$Location{$webwork_courses_url} = { SetHandler => "none" };
	$Location{$webwork_htdocs_url} = { SetHandler => "none" };
}

</Perl>

####################################################################
# WebworkSOAP handlers (for integration with moodle)
####################################################################
#PerlModule WebworkSOAP

# WEBWORK SOAP CONFIGURATION
#<Location /webwork2_rpc>
#        PerlHandler Apache::SOAP
#        SetHandler perl-script
#        PerlSetVar dispatch_to "WebworkSOAP"
#        PerlSetVar options "compress_threshold => 10000"
#        Require all granted
#</Location>

####################################################################
# WebworkSOAP WSDL HANDLER :: TO BE REPLACED WITH A FILE FOR PRODUCTION SERVERS
####################################################################
#<Location /webwork2_wsdl>
#        PerlSetVar dispatch_to "WebworkSOAP::WSDL"
#        PerlSetVar options "compress_threshold => 10000"
#        PerlHandler WebworkSOAP::WSDL
#        SetHandler perl-script
#        Require all granted
#</Location>


####################################################################
# WebworkWebservice handlers -- for integration with external editor
####################################################################


########### WebworkWebservice XMLRPC handler ##########

PerlModule WebworkWebservice

<Location /mod_xmlrpc>
	SetHandler perl-script
	PerlHandler Apache::XMLRPC::Lite
	PerlSetVar dispatch_to "WebworkXMLRPC"
	PerlSetVar options "compress_threshold => 10000"
        Require all granted
</Location>

########### For "raw" json format ###########
# If a remote site is using this WW server to process WW problems
# and embed them into web pages, the web browser might not permit
# the WW problems to be displayed, as it violates security policy
# to mix content from different originis without an explicit
# directive from the WW server that it is safe.
# Uncomment the following to set the header to enable Cross-Origin
# Resource Sharing (CORS).
# You will also need to enable headers via something like:
# sudo a2enmod headers
# to use this. 
# This is not actually needed to use the client formats unless
# they are accessed from a *remote* server. 

#<IfModule mod_headers.c>
#    <Location /webwork2/html2xml>
#        Header set Access-Control-Allow-Origin "*"
#    </Location>
#</IfModule>


########## WebworkWebservice SOAP handler ##########

#PerlModule WebworkWebservice
#
#<Location /mod_soap>
#	SetHandler perl-script
#	PerlHandler Apache::SOAP
#	PerlSetVar dispatch_to "WebworkXMLRPC" 
#	PerlSetVar options "compress_threshold => 10000"
#       Require all granted
#</Location>

####################################################################
# WebworkSOAP  "bridge2" handler (Moodle/WeBWorK Question bridge)
####################################################################

#Include /Volumes/WW_test/opt/webwork/ww_opaque_server/conf/opaqueserver.apache-config

####################################################################
# Expires Module configuration
####################################################################

#  This will enable expirey information for the webserver which will
#  cut down on the number of requests made. This is a good option if you 
#  are having bandwidth problems.  

#  enable the expires apache module (by using a2enmod expires or 
#  by commenting out the following line and including the right path

#LoadModule expires_module /path/to/mod_expires.so

<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"    
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType image/x-icon "access plus 1 year"
    ExpiresByType application/x-font-woff  "access plus 1 year"
</IfModule>
