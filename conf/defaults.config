#!perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2007 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: webwork2/conf/defaults.config,v 1.225 2010/05/18 18:03:31 apizer Exp $
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

# This file is used to set up the default WeBWorK course environment for all
# requests. Values may be overwritten by the course.conf for a specific course.
# All package variables set in this file are added to the course environment.
# If you wish to set a variable here but omit it from the course environment,
# use the "my" keyword. The $webwork_dir variable is set in the WeBWorK Apache
# configuration file (webwork.apache-config) and is available for use here. In
# addition, the $courseName variable holds the name of the current course.

# YOU SHOULD NOT NEED TO EDIT THIS FILE!!
# All site-specific settings such as file locations and web addresses are
# configured in site.conf.  If you want to override any settings in this
# file, you can put a directive in localOverrides.conf.

include("conf/site.conf");
include("VERSION");  # get WW version 
include("PG_VERSION"); # get PG VERSION -- # these addresses are fragile.  Should we change the way include() works?

################################################################################
# site.conf  should contain basic information about directories and URLs on
# your server
################################################################################

################################################################################
# Mail Settings
################################################################################

# AllowedRecipients defines addresses that the PG system is allowed to send mail
# to. this prevents subtle PG exploits. This should be set in course.conf to the
# addresses of professors of each course. Sending mail from the PG system (i.e.
# questionaires, essay questions) will fail if this is not set somewhere (either
# here or in course.conf).
$mail{allowedRecipients}     = [
	#'prof1@yourserver.yourdomain.edu',
	#'prof2@yourserver.yourdomain.edu',
];

# By default, feeback is sent to all users who have permission to
# receive_feedback. If this list is non-empty, feedback is also sent to the
# addresses specified here.
# 
# * If you want to disable feedback altogether, leave this empty and set
#   submit_feeback => $nobody in %permissionLevels below. This will cause the
#   feedback button to go away as well.
# 
# * If you want to send email ONLY to addresses in this list, set
#   receive_feedback => $nobody in %permissionLevels below.
# 
# It's often useful to set this in the course.conf to change the behavior of
# feedback for a specific course.
# 
# Items in this list may be bare addresses, or RFC822 mailboxes, like:
#   'Joe User <joe.user@example.com>'
# The advantage of this form is that the resulting email will include the name
# of the recipient in the "To" field of the email.
# 
$mail{feedbackRecipients}    = [
	#'prof1@yourserver.yourdomain.edu',
	#'prof2@yourserver.yourdomain.edu',
];

# Feedback subject line -- the following escape sequences are recognized:
# 
#   %c = course ID
#   %u = user ID
#   %s = set ID
#   %p = problem ID
#   %x = section
#   %r = recitation
#   %% = literal percent sign
# 

$mail{feedbackSubjectFormat} = "[WWfeedback] course:%c user:%u set:%s prob:%p sec:%x rec:%r";

# feedbackVerbosity:
#  0: send only the feedback comment and context link
#  1: as in 0, plus user, set, problem, and PG data
#  2: as in 1, plus the problem environment (debugging data)
$mail{feedbackVerbosity}     = 1;

# Defines the size of the Mail Merge editor window
# FIXME: should this be here? it's UI, not mail
# FIXME: replace this with the auto-size method that TWiki uses
$mail{editor_window_rows}    = 15;
$mail{editor_window_columns} = 100;

##################################################################################
# Customizing the action of the "Email your instructor" button
##################################################################################

# Customizing the behavior for this button is best done by copying the lines below, entering them
# in the localOverrides.conf file and making the desired modifications. 
# Then you will not need to update these modifications
# when you download a new version of WeBWorK.

# Use this to customize the text of the feedback button.
$feedback_button_name = "Email instructor";

# If this value is true, feedback will only be sent to users with the same
# section as the user initiating the feedback.
$feedback_by_section = 0;

# If the variable below is set to a non-empty value (i.e. in course.conf), WeBWorK's usual
# email feedback mechanism  will be replaced with a link to the given URL.
# See also $feedback_button_name, above.

$courseURLs{feedbackURL} = "";

# If the variable below is set to a non-empty value (i.e. in course.conf), 
# WeBWorK's usual email feedback mechanism  will be replaced with a link to the given URL and
# a POST request with information about the problem including the HTML rendering
# of the problem will be sent to that URL.
# See also $feedback_button_name, above.

#$courseURLs{feedbackFormURL} = "http://www.mathnerds.com/MathNerds/mmn/SDS/askQuestion.aspx";  #"http://www.tipjar.com/cgi-bin/test";
$courseURLs{feedbackFormURL} = "";

################################################################################
# Theme
################################################################################

$defaultTheme = "math2";
$defaultThemeTemplate = "system";

################################################################################
# Achievements
################################################################################
$achievementsEnabled = 0;
$achievementPointsPerProblem = 5;

################################################################################
# Language
################################################################################

$language = "en";   # tr = turkish,  en=english

################################################################################
# System-wide locations (directories and URLs)
################################################################################

# The root directory, set by webwork_root variable in Apache configuration.
$webworkDirs{root}          = "$webwork_dir";

# Location of system-wide data files.
$webworkDirs{DATA}          = "$webworkDirs{root}/DATA";

# Used for temporary storage of uploaded files.
$webworkDirs{uploadCache}   = "$webworkDirs{DATA}/uploads";

# Location of utility programs.
$webworkDirs{bin}           = "$webworkDirs{root}/bin";

# Location of configuration files, templates, snippets, etc.
$webworkDirs{conf}          = "$webworkDirs{root}/conf";


# Location of course directories.
$webworkDirs{courses}       = "$webwork_courses_dir" || "$webworkDirs{root}/courses";

# Contains log files.
$webworkDirs{logs}          = "$webworkDirs{root}/logs";

# Contains non-web-accessible temporary files, such as TeX working directories.
$webworkDirs{tmp}           = "$webworkDirs{root}/tmp";

# The (absolute) destinations of symbolic links that are OK for the FileManager to follow.
#   (any subdirectory of these is a valid target for a symbolic link.)
# For example:
#    $webworkDirs{valid_symlinks} = ["$webworkDirs{courses}/modelCourse/templates","/ww2/common/sets"];
$webworkDirs{valid_symlinks}   = [];

################################################################################
##### The following locations are web-accessible.
################################################################################

# The root URL (usually /webwork2), set by <Location> in Apache configuration.
$webworkURLs{root}          = "$webwork_url";

# Location of system-wide web-accessible files, such as equation images, and
# help files.
$webworkDirs{htdocs}        = "$webwork_htdocs_dir" || "$webworkDirs{root}/htdocs";
$webworkURLs{htdocs}        = "$webwork_htdocs_url";

# Location of web-accessible temporary files, such as equation images.
# These two should be set in localOverrides.conf -- not here since this can be overwritten by new versions.
$webworkDirs{htdocs_temp}   = "$webworkDirs{htdocs}/tmp";
$webworkURLs{htdocs_temp}   = "$webworkURLs{htdocs}/tmp";

# Location of cached equation images.
$webworkDirs{equationCache} = "$webworkDirs{htdocs_temp}/equations";
$webworkURLs{equationCache} = "$webworkURLs{htdocs_temp}/equations";

# Contains context-sensitive help files.
$webworkDirs{local_help}    = "$webworkDirs{htdocs}/helpFiles";
$webworkURLs{local_help}    = "$webworkURLs{htdocs}/helpFiles";

# Location of theme templates.
$webworkDirs{themes}     = "$webworkDirs{htdocs}/themes";

# Location of localization directory.
$webworkDirs{localize} = "$webworkDirs{root}/lib/WeBWorK/Localize";

# URL of general WeBWorK documentation.
$webworkURLs{docs}          = "http://webwork.maa.org";

# URL of WeBWorK Bugzilla database.
$webworkURLs{bugReporter}   = "http://bugs.webwork.maa.org/enter_bug.cgi";

# Location of CSS
# $webworkURLs{stylesheet}    = "$webworkURLs{htdocs}/css/${defaultTheme}.css";
# this is never used -- changing the theme from the config panel
# doesn't appear to reset the theme in time?
# It's better to refer directly to the .css file in the system.template
# <link rel="stylesheet" type="text/css" href="<!--#url type="webwork" name="htdocs"-->/css/math.css"/>

# Location of jsMath script, used for the jsMath display mode.
$webworkURLs{jsMath}        = "$webworkURLs{htdocs}/jsMath/jsMath-ww.js";

# Location of MathJax script, used for the MathJax display mode.
$webworkURLs{MathJax}       = "$webworkURLs{htdocs}/mathjax/MathJax.js?config=TeX-AMS_HTML-full";

# Location of Tabber script, used to generate tabbed widgets.
$webworkURLs{tabber}		= "$webworkURLs{htdocs}/js/tabber.js";

# Location of ASCIIMathML script, used for the asciimath display mode.
$webworkURLs{asciimath}     = "$webworkURLs{htdocs}/ASCIIMathML/ASCIIMathML.js";

# Location of LaTeXMathML script, used for the LaTeXMathML display mode.
$webworkURLs{LaTeXMathML}   = "$webworkURLs{htdocs}/LaTeXMathML/LaTeXMathML.js";

################################################################################
# Defaults for course-specific locations (directories and URLs)
################################################################################

# The root directory of the current course. (The ID of the current course is
# available in $courseName.)
$courseDirs{root}        = "$webworkDirs{courses}/$courseName";

# Location of course-specific data files.
$courseDirs{DATA}        = "$courseDirs{root}/DATA";

# Location of course HTML files, passed to PG.
$courseDirs{html}        = "$courseDirs{root}/html";
$courseURLs{html}        = "$webwork_courses_url/$courseName";

# Location of course image files, passed to PG.
$courseDirs{html_images} = "$courseDirs{html}/images";

# Location of web-accessible, course-specific temporary files, like static and
# dynamically-generated PG graphics.
$courseDirs{html_temp}   = "$webworkDirs{htdocs_temp}/$courseName";
$courseURLs{html_temp}   = "$webworkURLs{htdocs_temp}/$courseName";

# Location of course-specific logs, like the transaction log.
$courseDirs{logs}        = "$courseDirs{root}/logs";

# Location of scoring files.
$courseDirs{scoring}     = "$courseDirs{root}/scoring";

# Location of PG templates and set definition files.
$courseDirs{templates}   = "$courseDirs{root}/templates";

# Location of course achievement files.
$courseDirs{achievements}   = "$courseDirs{templates}/achievements";
$courseDirs{achievements_html} = "$courseDirs{html}/achievements"; #contains badge icons
$courseURLs{achievements}   = "$courseURLs{html}/achievements";

# Location of course-specific macro files.
$courseDirs{macros}      = "$courseDirs{templates}/macros";

# Location of mail-merge templates.
$courseDirs{email}       = "$courseDirs{templates}/email";

# Location of temporary editing files.
$courseDirs{tmpEditFileDir}  = "$courseDirs{templates}/tmpEdit";

# mail merge status directory
$courseDirs{mailmerge}   = "$courseDirs{DATA}/mailmerge";

################################################################################
# System-wide files
################################################################################

# Location of this file.
$webworkFiles{environment}                      = "$webworkDirs{conf}/defaults.conf";

# Flat-file database used to protect against MD5 hash collisions. TeX equations
# are hashed to determine the name of the image file. There is a tiny chance of
# a collision between two TeX strings. This file allows for that. However, this
# is slow, so most people chose not to worry about it. Set this to "" if you
# don't want to use the equation cache file.
$webworkFiles{equationCacheDB}                  = ""; # "$webworkDirs{DATA}/equationcache";

################################################################################
# Hardcopy snippets are used in constructing a TeX file for hardcopy output.
# They should contain TeX code unless otherwise noted.
################################################################################
# The preamble is the first thing in the TeX file.
$webworkFiles{hardcopySnippets}{preamble}       = "$webworkDirs{conf}/snippets/hardcopyPreamble.tex";

# The setHeader preceeds each set in hardcopy output. It is a PG file.
# This is the default file which is used if a specific files is not selected
$webworkFiles{hardcopySnippets}{setHeader}      = "$webworkDirs{conf}/snippets/setHeader.pg";  # hardcopySetHeader.pg",
#$webworkFiles{hardcopySnippets}{setHeader}     = "$courseDirs{templates}/ASimpleHardCopyHeaderFile.pg"; # An alternate default header file

# The problem divider goes between problems.
$webworkFiles{hardcopySnippets}{problemDivider} = "$webworkDirs{conf}/snippets/hardcopyProblemDivider.tex";

# The set footer goes after each set. Is is a PG file.
$webworkFiles{hardcopySnippets}{setFooter}      = "$webworkDirs{conf}/snippets/hardcopySetFooter.pg";

# The set divider goes between sets (in multiset output).
$webworkFiles{hardcopySnippets}{setDivider}     = "$webworkDirs{conf}/snippets/hardcopySetDivider.tex";

# The user divider does between users (in multiuser output).
$webworkFiles{hardcopySnippets}{userDivider}    = "$webworkDirs{conf}/snippets/hardcopyUserDivider.tex";

# The postabmle is the last thing in the TeX file.
$webworkFiles{hardcopySnippets}{postamble}      = "$webworkDirs{conf}/snippets/hardcopyPostamble.tex";

##### Screen snippets are used when displaying problem sets on the screen.

# The set header is displayed on the problem set page. It is a PG file.
# This is the default file which is used if a specific files is not selected
#$webworkFiles{screenSnippets}{setHeader}        = "$webworkDirs{conf}/snippets/setHeader.pg"; # screenSetHeader.pg"
$webworkFiles{screenSnippets}{setHeader}       = "$courseDirs{templates}/ASimpleScreenHeaderFile.pg"; # An alternate default header file

# A PG template for creation of new problems.
$webworkFiles{screenSnippets}{blankProblem}    = "$webworkDirs{conf}/snippets/blankProblem2.pg"; # screenSetHeader.pg"

# A site info  "message of the day" file
$webworkFiles{site_info}                       = "$webworkDirs{htdocs}/site_info.txt";

################################################################################
# Course-specific files
################################################################################

# The course configuration file.
$courseFiles{environment} = "$courseDirs{root}/course.conf";

# The course simple configuration file (holds web-based configuratoin).
$courseFiles{simpleConfig} = "$courseDirs{root}/simple.conf";

# File contents are displayed after login, on the problem sets page. Path given
# here is relative to the templates directory.
$courseFiles{course_info} = "course_info.txt";

# File contents are displayed on the login page. Path given here is relative to
# the templates directory.
$courseFiles{login_info}  = "login_info.txt";

# Additional library buttons can be added to the Library Browser (SetMaker.pm)
# by adding the libraries you want to the following line.  For each key=>value
# in the list, if a directory (or link to a directory) with name 'key' appears
# in the templates directory, then a button with name 'value' will be placed at
# the top of the problem browser.  (No button will appear if there is no
# directory or link with the given name in the templates directory.)  For
# example,
# 
#     $courseFiles{problibs} = {rochester => "Rochester", asu => "ASU"};
# 
# would add two buttons, one for the Rochester library and one for the ASU
# library, provided templates/rochester and templates/asu exists either as 
# subdirectories or links to other directories. The "NPL Directory" button
# activated below gives access to all the directories in the National 
# Problem Library.
# 
$courseFiles{problibs}    = {
	Library          => "NPL Directory",
# 	rochesterLibrary => "Rochester",
# 	unionLibrary     =>"Union",
# 	asuLibrary       => "Arizona State",
# 	dcdsLibrary      => "Detroit CDS",
# 	dartmouthLibrary => "Dartmouth",
# 	indianaLibrary   => "Indiana",
# 	osuLibrary       => "Ohio State",	
#   capaLibrary      => "CAPA",
};

################################################################################
# Status system
################################################################################

# This is the default status given to new students and students with invalid
# or missing statuses.
$default_status = "Enrolled";

# The first abbreviation in the abbreviations list is the canonical
# abbreviation, and will be used when setting the status value in a user record
# or an exported classlist file.
# 
# Results are undefined if more than one status has the same abbreviation.
# 
# The four behaviors that are controlled by status are:
#   allow_course_access   => is this user allowed to log in?
#   include_in_assignment => is this user included when assigning as set to "all" users?
#   include_in_stats      => is this user included in statistical reports?
#   include_in_email      => is this user included in emails sent to the class?
#   include_in_scoring    => is this user included in score reports?

%statuses = (
	Enrolled => {
		abbrevs => [qw/ C c current enrolled /],
		behaviors => [qw/ allow_course_access include_in_assignment include_in_stats include_in_email include_in_scoring /],
	},
	Audit => {
		abbrevs => [qw/ A a audit /],
		behaviors => [qw/ allow_course_access include_in_assignment include_in_stats include_in_email /],
	},
	Drop => {
		abbrevs => [qw/ D d drop withdraw /],
		behaviors => [qw/  /],
	},
	Proctor => { 
		abbrevs => [qw/ P p proctor /],
		behaviors => [qw/  /],
	},
);

################################################################################
# Database options
################################################################################

# these variables are used by database.conf. we define them here so that editing
# database.conf isn't necessary.

# required permissions
# GRANT SELECT ON webwork.* TO webworkRead@localhost IDENTIFIED BY 'passwordRO';
# GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, DROP, INDEX, LOCK TABLES ON webwork.* TO webworkWrite@localhost IDENTIFIED BY 'passwordRW';


################################################################################
# set these variables in site.conf
#
# $database_dsn = "dbi:mysql:webwork";
# $database_username = "webworkWrite";
# $database_password = ""; #set this in site.conf
# $database_debug = 0;
################################################################################



# Database schemas are defined in the file conf/database.conf and stored in the
# hash %dbLayouts. The standard schema is called "sql_single";

include( "./conf/database.conf.dist");  # always include database.conf.dist
                                    # in the rare case where you want local overrides
                                    # you can place include("conf/database.conf") in
                                    # the database.conf.dist file
# this change is meant to help alleviate the common mistake of forgetting to update the 
# database.conf file when changing WW versions.

# Select the default database layout. This can be overridden in the course.conf
# file of a particular course. The only database layout supported in WW 2.1.4
# and up is "sql_single".
$dbLayoutName = "sql_single";

# This sets the symbol "dbLayout" as an alias for the selected database layout.
*dbLayout     = $dbLayouts{$dbLayoutName};

# use this to make sure achievement tables are present.
my $achievementTablesExist = (defined ($dbLayouts{$dbLayoutName}{global_user_achievement}) )?1:0;

################################################################################
# Problem library options
################################################################################

# For configuration instructions, see:
# http://webwork.maa.org/wiki/National_Problem_Library
# Set the location of the library in site.conf
# These values usually do not need to be edited.

# Problem Library version (currently version 2).
$problemLibrary{version} = "2";

# Problem Library SQL database connection information
$problemLibrary_db = {
        dbsource => $database_dsn,
        user     => $database_username,
        passwd   => $database_password,
};

################################################################################
# Logs
################################################################################


# Logs data about how long it takes to process problems. (Do not confuse this
# with the /other/ timing log which can be set by WeBWorK::Timing and is used
# for benchmarking system performance in general. At some point, this timing
# mechanism will be deprecated in favor of the WeBWorK::Timing mechanism.)
$webworkFiles{logs}{timing}         = "$webworkDirs{logs}/timing.log";

# Logs courses created via the web-based Course Administration module.
$webworkFiles{logs}{hosted_courses} = "$webworkDirs{logs}/hosted_courses.log";

# The transaction log contains data from each recorded answer submission. This
# is useful if the database becomes corrupted.
$webworkFiles{logs}{transaction}    = "$webworkDirs{logs}/${courseName}_transaction.log";

# The answer log stores a history of all users' submitted answers.
$courseFiles{logs}{answer_log}      = "$courseDirs{logs}/answer_log";

# Log logins.
$courseFiles{logs}{login_log}       = "$courseDirs{logs}/login.log";

# Log for almost every click.  By default it is the empty string, which
# turns this log off.  If you want it turned on, we suggest
#                "$courseDirs{logs}/activity.log"
# When turned on, this log can get quite large.
$courseFiles{logs}{activity_log} = '';

################################################################################
# Site defaults (Usually overridden in localOverrides.conf)
################################################################################

# The default_templates_course is used by default to create a new course.
# The contents of the templates directory are copied from this course
# to the new course being created.
$siteDefaults{default_templates_course} ="modelCourse";

################################################################################
# Authentication system
################################################################################

# FIXME This mechanism is a little awkward and probably should be merged with
# the dblayout selection system somehow.

# Select the authentication module to use for normal logins.
# 
# If this value is a string, the given authentication module will be used
# regardless of the database layout. If it is a hash, the database layout name
# will be looked up in the hash and the resulting value will be used as the
# authentication module. The special hash key "*" is used if no entry for the
# current database layout is found.
# If this value is a sequence of strings or hashes, then each
# string or hash in the sequence will be successively tested to see if it 
# provides a module that can handle
# the authentication request (by calling the module's 
#   sub  request_has_data_for_this_verification_module ).
# The first module that responds affirmatively will be used.
# 
# 
$authen{user_module} = {
	# sql_moodle => "WeBWorK::Authen::Moodle",
	# sql_ldap   => "WeBWorK::Authen::LDAP",
	"*" => "WeBWorK::Authen::Basic_TheLastOption",
};

# Select the authentication module to use for proctor logins.
# 
# A string or a hash is accepted, as above.
# 
$authen{proctor_module} = "WeBWorK::Authen::Proctor";

################################################################################
# Authorization system (Make local overrides in localOverrides.conf )
################################################################################

# this section lets you define which groups of users can perform which actions.

# this hash maps a numeric permission level to the name of a role. the number
# assigned to a role is significant -- roles with higher numbers are considered
# "more privileged", and are included when that role is listed for a privilege
# below.
# 
%userRoles = (
	guest         => -5,
	student       => 0,
	login_proctor => 2,
	grade_proctor => 3,
	ta            => 5,
	professor     => 10,
	admin         => 20,
	nobody        => 99999999, # insure that nobody comes at the end
);

# this hash maps operations to the roles that are allowed to perform those
# operations. the role listed and any role with a higher permission level (in
# the %userRoles hash) will be allowed to perform the operation. If the role
# is undefined, no users will be allowed to perform the operation.
# 
%permissionLevels = (
	login                          => "guest",
	report_bugs                    => "ta",
	submit_feedback                => "student",
	change_password                => "student",
	change_email_address           => "student",
	
	proctor_quiz_login             => "login_proctor",
	proctor_quiz_grade             => "grade_proctor",
	view_proctored_tests           => "student",
	view_hidden_work               => "ta",
	
	view_multiple_sets             => "ta",
	view_unopened_sets             => "ta",
	view_hidden_sets               => "ta",
	view_answers                   => "ta",
	view_ip_restricted_sets        => "ta",
	
	become_student                 => "professor",
	access_instructor_tools        => "ta",
	score_sets                     => "professor",
	send_mail                      => "professor",
	receive_feedback               => "ta",
	
	create_and_delete_problem_sets => "professor",
	assign_problem_sets            => "professor",
	modify_problem_sets            => "professor",
	modify_student_data            => "professor",
	modify_classlist_files         => "professor",
	modify_set_def_files           => "professor",
	modify_scoring_files           => "professor",
	modify_problem_template_files  => "professor",
	manage_course_files            => "professor",
	edit_achievements			   => "professor",
	create_and_delete_courses      => "professor",
	fix_course_databases           => "professor",
	modify_tags                    => undef,
	
	##### Behavior of the interactive problem processor #####
	
	show_correct_answers_before_answer_date         => "ta",
	show_solutions_before_answer_date               => "ta",
	avoid_recording_answers                         =>  "nobody", # record everyone's answer "ta",
	# Below this level, old answers are never initially shown
	can_show_old_answers_by_default                 => "student",
	# at this level, we look at showOldAnswers for default value
	# even after the due date
	can_always_use_show_old_answers_default         => "professor",
	check_answers_before_open_date                  => "ta",
	check_answers_after_open_date_with_attempts     => "ta",
	check_answers_after_open_date_without_attempts  => "guest",
	check_answers_after_due_date                    => "guest",
	check_answers_after_answer_date                 => "guest",
	create_new_set_version_when_acting_as_student   => undef,
	print_path_to_problem                           => "professor", # see "Special" PG environment variables
	always_show_hint								=> "professor", # see "Special" PG environment variables
	always_show_solution							=> "professor",  # see "Special" PG environment variables
	record_set_version_answers_when_acting_as_student => undef,
	record_answers_when_acting_as_student           => undef,
	# "record_answers_when_acting_as_student" takes precedence
	# over the following for professors acting as students:
	record_answers_before_open_date                 => undef,
	record_answers_after_open_date_with_attempts    => "student",
	record_answers_after_open_date_without_attempts => undef,
	record_answers_after_due_date                   => undef,
	record_answers_after_answer_date                => undef,
#	dont_log_past_answers                           => "professor",
	# does the user get to see a dump of the problem?
	view_problem_debugging_info                     => "ta",
	
	##### Behavior of the Hardcopy Processor #####
	
	download_hardcopy_multiuser  => "ta",
	download_hardcopy_multiset   => "ta",
	download_hardcopy_view_errors =>"professor",
	download_hardcopy_format_pdf => "guest",
	download_hardcopy_format_tex => "ta",
	download_hardcopy_format_tikz => "professor", # under_construction
);

# This is the default permission level given to new students and students with
# invalid or missing permission levels.
$default_permission_level = $userRoles{student};

################################################################################
# Session options
################################################################################

# $sessionKeyTimeout defines seconds of inactivity before a key expires
$sessionKeyTimeout = 60*30;

# $sessionKeyLength defines the length (in characters) of the session key
$sessionKeyLength = 32;

# @sessionKeyChars lists the legal session key characters
@sessionKeyChars = ('A'..'Z', 'a'..'z', '0'..'9');

# Practice users are users who's names start with $practiceUser
# (you can comment this out to remove practice user support)
$practiceUserPrefix = "practice";

# There is a practice user who can be logged in multiple times.  He's
# commented out by default, though, so you don't hurt yourself.  It is
# kindof a backdoor to the practice user system, since he doesn't have a
# password.  Come to think of it, why do we even have this?!
#$debugPracticeUser = "practice666";

# Option for gateway tests; $gatewayGracePeriod is the time in seconds
# after the official due date during which we'll still grade the test
$gatewayGracePeriod = 120;

################################################################################
# Session Management
################################################################################

## Session management, i.e., checking whether the session has timed out,
## can be handled either using the key database, the traditional method,
## or by using session cookies.  If one is using the key database
## for session_management and is using WeBWorK's password authentication,
## then one has the option of keeping a Login cookie with a duration
## of up to 30 days.  However, if one uses cookies for session management,
## then one cannot also use Login cookies.  So session managment using
## cookies is more appropriate when external authentication systems
## are used, e.g., LDAP, LTIBasic, etc.
##
## The reason one might want to use cookies for session management
## is to avoid having to obtain a write lock on the Key database
## every time a request is received in order to update the timestamp
## in the Key database.  When cookies are used for session management,
## one obtains a write lock on the Key database for the original
## login request in order to write the new session key and its initial
## timestamp to the Key database, but on subsequent requests,
## one merely obtains a read lock on the Key database in order
## to verify that the session key in the session cookie is the
## same as the session key in the Key database.  The session timestamp
## is maintained in the cookie, not in the Key database, which will
## only show the timestamp of the original login.

## For session management using session_cookies,
## uncomment the line   $session_management_via = "session_cookie"
## in the localOverrides.conf file, which will have the effect
## of overriding the  $session_management_via = "key" below.

$session_management_via = "key";

################################################################################
# PG subsystem options
################################################################################

# List of enabled display modes. Comment out any modes you don't wish to make
# available for use.
$pg{displayModes} = [
#	"plainText",     # display raw TeX for math expressions
#	"formattedText", # format math expressions using TtH
	"images",        # display math expressions as images generated by dvipng
	"jsMath",        # render TeX math expressions on the client side using jsMath
#	"MathJax",       # render TeX math expressions on the client side using MathJax --- we strongly recommend people install and use MathJax
#	"asciimath",     # render TeX math expressions on the client side using ASCIIMathML
#	"LaTeXMathML",   # render TeX math expressions on the client side using LaTeXMathML
];

###########################################################################################
#### Default settings for the PG translator
#### This section controls the display of equations, HINTS, answers, SOLUTIONS, 
#### "sticky_answers" a.k.a. showOldAnswers,
#### coloring of answer blanks and the numeric display of entered answers.
###########################################################################################

# Default display mode. Should be listed above (uncomment only one).
$pg{options}{displayMode}        = "images";

# The default grader to use, if a problem doesn't specify.
$pg{options}{grader}             = "avg_problem_grader";

# Fill in answer blanks with the student's last answer by default?
$pg{options}{showOldAnswers}     = 1;

# Show correct answers (when allowed) by default?
$pg{options}{showCorrectAnswers} = 0;  # this is a backup value use when nothing else has been set. I can think of no case where it should anything but zero.

# Customize hints and solutions
# Show hints (when allowed) by default?
$pg{options}{showHints}          = 0;  # this is a backup value use when nothing else has been set. I can think of no case where it should anything but zero.


# Show solutions (when allowed) by default?
$pg{options}{showSolutions}      = 0;  # this is a backup value use when nothing else has been set. I can think of no case where it should anything but zero.


# By default hints and solutions are ALWAYS shown for professors (and above) so that they
# can check hints and solutions easily and make corrections.  
# To disable this feature set the permission  levels
# 		always_show_hint  to  "nobody" (by default this is "professor")
# and	always_show_solution to "nobody" (by default this is "professor")
# This is done in the %permissions section above.

# If always_show_hint is set to "nobody" then hints are shown, even to professors, only after
# a certain number of submissions have occurred.  This number is set in each problem with
# the variable $main::showHints


# Use knowls for hints
$pg{options}{use_knowls_for_hints}          = 1; 

# Use knowls for solutions
$pg{options}{use_knowls_for_solutions}      = 1; 

# The buttons below are active only if knowls are being used. If set to 1 then the hints (and solutions)
# checkboxes are shown and when these are checked and the problem resubmitted THEN the knowls outline
# appears.  I can't immediately think of a useful case where these should be set to 1.  If knowls are not being 
# used then these checkboxes are ALWAYS shown when a hint or solution is available and the value 
# of these two options is ignored.

# Show solution checkbox
$pg{options}{show_solution_checkbox} = 0;

# Show hint checkbox
$pg{options}{show_hint_checkbox}     = 0;

# Display the "Entered" column which automatically shows the evaluated student answer, e.g. 1 if student input is sin(pi/2).
# If this is set to 0, e.g. to save space in the response area, the student can still see their evaluated answer by hovering
# the mouse pointer over the typeset version of their answer
$pg{options}{showEvaluatedAnswers}      = 1;

# Catch translation warnings internally by default? (We no longer need to do
# this, since there is a global warnings handler. So this should be off.)
$pg{options}{catchWarnings}      = 0;

# decorations for correct input blanks -- apparently you can't define and name attribute collections in a .css file
$pg{options}{correct_answer} = "{border-width:2;border-style:solid;border-color:#8F8}"; #matches resultsWithOutError class in math2.css

# decorations for incorrect input blanks
$pg{options}{incorrect_answer} = "{border-width:2;border-style:solid;border-color:#F55}"; #matches resultsWithError class in math2.css

##### Currently-selected renderer

# Only the local renderer is supported in this version.
$pg{renderer} = "WeBWorK::PG::Local";

# The remote renderer connects to an XML-RPC PG rendering server.
#$pg{renderer} = "WeBWorK::PG::Remote";

##### Renderer-dependent options

# The remote renderer has one option:
$pg{renderers}{"WeBWorK::PG::Remote"} = {
	# The "proxy" server to connect to for remote rendering.
	proxy => "http://localhost:21000/RenderD",
};

##### Settings for various display modes

# "images" mode has several settings:
$pg{displayModeOptions}{images} = {
	# Determines the method used to align images in output. Can be
	# "baseline", "absmiddle", or "mysql".
	dvipng_align => 'mysql', 

	# If mysql is chosen, this information indicates which database contains the
	# 'depths' table. Since 2.3.0, the depths table is kept in the main webwork
	# database. (If you are upgrading from an earlier version of webwork, and
	# used the mysql method in the past, you should move your existing 'depths'
	# table to the main database.)
	dvipng_depth_db => {
		dbsource => $database_dsn,
		user     => $database_username,
		passwd   => $database_password,
	},
};

$pg{displayModeOptions}{jsMath} = {
	reportMissingFonts => 0,       # set to 1 to allow the missing font message
	missingFontMessage => undef,   # set to an HTML string to replace the missing font message
	noImageFonts => 0,             # set to 1 if you didn't install the jsMath image fonts
	processDoubleClicks => 1,      # set to 0 to disable double-click on math to get TeX source
};

##### Directories used by PG

# The root of the PG directory tree (from pg_root in Apache config).
$pg{directories}{root}   = "$pg_dir";
$pg{directories}{lib}    = "$pg{directories}{root}/lib";
$pg{directories}{macros} = "$pg{directories}{root}/macros";

#
#  The macro file search path.  Each directory in this list is seached
#  (in this order) by loadMacros() when it looks for a .pl file.
#
$pg{directories}{macrosPath} = [
   ".",                     # search the problem file's directory
   $courseDirs{macros},
   $pg{directories}{macros},
   "$courseDirs{templates}/Library/macros/Union",
   "$courseDirs{templates}/Library/macros/Michigan",
   "$courseDirs{templates}/Library/macros/CollegeOfIdaho",
   "$courseDirs{templates}/Library/macros/FortLewis",
   "$courseDirs{templates}/Library/macros/TCNJ",
   "$courseDirs{templates}/Library/macros/NAU",
   "$courseDirs{templates}/Library/macros/Dartmouth",
   "$courseDirs{templates}/Library/macros/WHFreeman",
];

# The applet search path. If a full URL is given, it is used unmodified. If an
# absolute path is given, the URL of the local server is prepended to it.
# 
# For example, if an item is "/math/applets",
# and the local server is  "https://math.yourschool.edu",
# then the URL "https://math.yourschool.edu/math/applets" will be used.
# 

$pg{directories}{appletPath} = [    # paths to search for applets (requires full url)
	"$webworkURLs{htdocs}/applets",
	"$webworkURLs{htdocs}/applets/geogebra_stable",
	"$courseURLs{html}/applets",  
	"$webworkURLs{htdocs}/applets/Xgraph",
	"$webworkURLs{htdocs}/applets/PointGraph",
	"$webworkURLs{htdocs}/applets/Xgraph",
	"$webworkURLs{htdocs}/applets/liveJar",
	"$webworkURLs{htdocs}/applets/Image_and_Cursor_All",
	
];

##### "Special" PG environment variables. (Stuff that doesn't fit in anywhere else.)

# Users for whom to print the file name of the PG file being processed.
$pg{specialPGEnvironmentVars}{PRINT_FILE_NAMES_FOR} = [ "professor", ];  
   # ie file paths are printed for 'gage'
$pg{specialPGEnvironmentVars}{PRINT_FILE_NAMES_PERMISSION_LEVEL} = 
        $userRoles{ $permissionLevels{print_path_to_problem} }; 
   # (file paths are also printed for anyone with this permission or higher)
$pg{specialPGEnvironmentVars}{ALWAYS_SHOW_HINT_PERMISSION_LEVEL} = 
        $userRoles{ $permissionLevels{always_show_hint} }; 
   # (hints are automatically shown to anyone with this permission or higher)
$pg{specialPGEnvironmentVars}{ALWAYS_SHOW_SOLUTION_PERMISSION_LEVEL} = 
        $userRoles{ $permissionLevels{always_show_solution} }; 
   # (solutions are automatically shown to anyone with this permission or higher)

   
$pg{specialPGEnvironmentVars}{use_knowls_for_hints}     = $pg{options}{use_knowls_for_hints};
$pg{specialPGEnvironmentVars}{use_knowls_for_solutions} = $pg{options}{use_knowls_for_solutions};
   #  set the flags immediately above in the $pg{options} section above -- not here.

# Locations of CAPA resources. (Only necessary if you need to use converted CAPA
# problems.)
$pg{specialPGEnvironmentVars}{CAPA_Tools}             = "/opt/webwork/libraries/CAPA/CAPA_Tools/",
$pg{specialPGEnvironmentVars}{CAPA_MCTools}           = "/opt/webwork/libraries/CAPA/CAPA_MCTools/",
$pg{specialPGEnvironmentVars}{CAPA_GraphicsDirectory} = "$webworkDirs{htdocs}/CAPA_Graphics/",
$pg{specialPGEnvironmentVars}{CAPA_Graphics_URL}      = "$webworkURLs{htdocs}/CAPA_Graphics/",

# Size in pixels of dynamically-generated images, i.e. graphs.
$pg{specialPGEnvironmentVars}{onTheFlyImageSize}      = 400,
 
# To disable the Parser-based versions of num_cmp and fun_cmp, and use the
# original versions instead, set this value to 1.
$pg{specialPGEnvironmentVars}{useOldAnswerMacros} = 0;

# Strings to insert at the start and end of the body of a problem
#  (at beginproblem() and ENDDOCUMENT) in various modes.  More display modes
#  can be added if different behaviours are desired (e.g., HTML_dpng,
#  HTML_asciimath, etc.).  These parts are not used in the Library browser.

$pg{specialPGEnvironmentVars}{problemPreamble} = { TeX => '', HTML=> '' };
$pg{specialPGEnvironmentVars}{problemPostamble} = { TeX => '', HTML=>'' };

# To have the problem body indented and boxed, uncomment:

 $pg{specialPGEnvironmentVars}{problemPreamble}{HTML} = '<BLOCKQUOTE>
     <TABLE BORDER=1 CELLSPACING=1 CELLPADDING=15 BGCOLOR=#E8E8E8><TR><TD>'; 
 $pg{specialPGEnvironmentVars}{problemPostamble}{HTML} = '</TD></TR></TABLE>
     </BLOCKQUOTE>';

##### PG modules to load

# The first item of each list is the module to load. The remaining items are
# additional packages to import.
#
# That is: If you wish to include a module MyModule.pm which depends
# on additional modules Dependency1.pm and Dependency2.pm, these
# should appear as [qw(Mymodule.pm, Dependency1.pm, Dependency2.pm)]

${pg}{modules} = [
        [qw(HTML::Scrubber)],
        [qw(HTML::Parser)],
	[qw(DynaLoader)],
	[qw(Exporter)],
	[qw(GD)],
	[qw(AlgParser AlgParserWithImplicitExpand Expr ExprWithImplicitExpand utf8)],
	[qw(AnswerHash AnswerEvaluator)],
	[qw(WWPlot)], # required by Circle (and others)
	[qw(Circle)],
	[qw(Complex)],
	[qw(Complex1)],
	[qw(Distributions)],
	[qw(Fraction)],
	[qw(Fun)],
	[qw(Hermite)],
	[qw(Label)],
	[qw(ChoiceList)],
	[qw(Match)],
	[qw(MatrixReal1)], # required by Matrix
	[qw(Matrix)],
	[qw(Multiple)],
	[qw(PGrandom)],
	[qw(Regression)],
	[qw(Select)],
	[qw(Units)],
	[qw(VectorField)],
	[qw(Parser Value)],
	[qw(Parser::Legacy)],
#	[qw(SaveFile)],
#   [qw(Chromatic)], # for Northern Arizona graph problems 
#                    #  -- follow instructions at libraries/nau_problib/lib/README to install
    [qw(Applet FlashApplet JavaApplet CanvasApplet)],
	[qw(PGcore PGalias PGresource PGloadfiles PGanswergroup PGresponsegroup  Tie::IxHash)],
	[qw(Locale::Maketext)],
	[qw(WeBWorK::Localize)],
];

##### Problem creation defaults

# The default weight (also called value) of a problem to use when using the 
# Library Browser, Problem Editor or Hmwk Sets Editor to add problems to a set
# or when this value is left blank in an imported set definition file.
$problemDefaults{value} = 1;  

# The default max_attempts for a problem to use when using the 
# Library Browser, Problem Editor or Hmwk Sets Editor to add problems to a set
# or when this value is left blank in an imported set definition file.  Note that 
# setting this to -1 gives students unlimited attempts.
$problemDefaults{max_attempts} = -1;   

##### Answer evaluatior defaults

$pg{ansEvalDefaults} = {
	functAbsTolDefault            => .001,
	functLLimitDefault            => .0000001,
	functMaxConstantOfIntegration => 1E8,
	functNumOfPoints              => 3,
	functRelPercentTolDefault     => .1,
	functULimitDefault            => .9999999,
	functVarDefault               => "x",
	functZeroLevelDefault         => 1E-14,
	functZeroLevelTolDefault      => 1E-12,
	numAbsTolDefault              => .001,
	numFormatDefault              => "",
	numRelPercentTolDefault       => .1,
	numZeroLevelDefault           => 1E-14,
	numZeroLevelTolDefault        => 1E-12,
	useBaseTenLog                 => 0,
	defaultDisplayMatrixStyle     => "[s]",  # left delimiter, middle line delimiters, right delimiter
	reducedScoringPeriod          => 0,	# Length of Reduced Credit Period (formally Reduced Scoring Period) in minutes
	reducedScoringValue			  => 1,	# A number in [0,1]. Students will be informed of the value as a percentage
};



################################################################################
# Compatibility
################################################################################

# Define the old names for the various "root" variables.
$webworkRoot    = $webworkDirs{root};
$webworkURLRoot = $webworkURLs{root};
$pgRoot         = $pg{directories}{root};


################################################################################
# Session Management
################################################################################

## For session management using session_cookies, uncomment the first of the 
## following lines.  For session management using keys stored
## in the  key  database and, possibly, enduring cookies,
## uncomment the second line.

$session_management_via = "session_cookie";
#$session_management_via = "key";

################################################################################
# Webservices
################################################################################
$webservices = {
	enableCourseActions => 0, # enable createCourse, addUser, dropUser
	enableCourseActionsLog => 0,# enable logging of course actions
								# will log when courses are created and 
								# when students are added or dropped
	courseActionsLogfile => "$webworkDirs{logs}/courseactions.log",
	# enable this to assign all visible homework sets to new students
	# added by webservices
	courseActionsAssignHomework => 0, 
};


################################################################################
# Temporary hack for displaying the different versions of the editors
################################################################################

# These configurations can be overridden
# in course.conf file to tune the behavior for individual courses
# The items below can be placed in localOverrides.conf override the settings in this file
# One can also use $showeditors{classlisteditor1}=0; to override a setting.
%showeditors = (
	classlisteditor1   => 1,
	classlisteditor2   => 0,
	
	homeworkseteditor1 => 1,
	homeworkseteditor2 => 0,
	
	librarybrowser1    => 1,
	librarybrowser2    => 0,
	librarybrowser3    => 0,
	
	pgproblemeditor1   => 1,
	pgproblemeditor2   => 0,
);

###############################################################################
# DragMath editor 
###############################################################################

# DragMath is disabled by default; can enable it in course.conf file
$pg{specialPGEnvironmentVars}{DragMath} = 0;

################################################################################
# WeBWorK::ContentGenerator::Instructor::Config
################################################################################

# Configuation data
# It is organized by section.  The allowable types are
#  'text' for a text string (no quote marks allowed),
#  'number' for a number,
#  'list' for a list of text strings,
#  'permission' for a permission value,
#  'boolean' for variables which really hold 0/1 values as flags.
#  'checkboxlist' for variables which really hold a list of values which
#      can be independently picked yes/no as checkboxes

$ConfigValues = [
    ['General',
		{ var => 'courseFiles{course_info}',
		  doc => 'Name of course information file',
		  doc2 => 'The name of course information file (located in the templates directory). Its contents are displayed in the right panel next to the list of homework sets.',
		  type => 'text'},
		{ var => 'defaultTheme',
		  doc => 'Theme (refresh page after saving changes to reveal new theme.)',
		  doc2 => 'There are currently five themes (or skins) to choose from: ur, math, math2, and dgage.  The theme
specifies a unified look and feel for the WeBWorK course web pages.',
		  values => [qw(math math2 math3 ur dgage  union ubc)],
		  type => 'popuplist'},
		  { var => 'language',
		  doc => 'Language (refresh page after saving changes to reveal new language.)',
		  doc2 => 'WeBWorK currently has translations for four languages: "English en", "Turkish tr", "Spanish es", and "French fr" ',
		  values => [qw(de en tr es fr zh_hk heb)],
		  type => 'popuplist'},
		{ var => 'sessionKeyTimeout',
		  doc => 'Inactivity time before a user is required to login again',
		  doc2 => 'Length of time, in seconds, a user has to be inactive before he is required to login again.<p> This value should be entered as a number, so as 3600 instead of 60*60 for one hour',
		  type => 'number'},
		{ var => 'siteDefaults{timezone}',
		  doc => 'Timezone for the course',
		  doc2 => 'Some servers handle courses taking place in different timezones.  If this course is not showing the correct timezone, enter the correct value here.  The format consists of unix times, such as "America/New_York","America/Chicago", "America/Denver", "America/Phoenix" or "America/Los_Angeles". Complete list: <a href="http://en.wikipedia.org/wiki/List_of_zoneinfo_time_zones">TimeZoneFiles</a>',
		  type => 'text'},
    	{ var => 'achievementsEnabled',
		  doc => ($achievementTablesExist)?'Enable Course Achievements':'<span style="color:red">NOT READY for achievements: fix database.conf</span>',
		  doc2 => 'Activiating this will enable Mathchievements for webwork.  Mathchievements can be managed by using the Achievement Editor link.',
		  type => 'boolean'
		  },                
		 { var => 'achievementPointsPerProblem',
		  doc => 'Achievement Points Per Problem',
		  doc2 => 'This is the number of achievement points given to each user for completing a problem.',
		  type => 'number'
		  },
    ],
	['Permissions',
		{ var => 'permissionLevels{login}',
		  doc => 'Allowed to login to the course',
		  type => 'permission'},
		{ var => 'permissionLevels{change_password}',
		  doc => 'Allowed to change their password',
		  doc2 => 'Users at this level and higher are allowed to change their password. Normally guest users are not allowed to change their password.',
		  type => 'permission'},
		{ var => 'permissionLevels{become_student}',
		  doc => 'Allowed to <em>act as</em> another user',
		  type => 'permission'},
		{ var => 'permissionLevels{submit_feedback}',
		  doc => 'Can e-mail instructor',
		  doc2 => 'Only this permission level and higher get buttons for sending e-mail to the instructor.',
		  type => 'permission'},
		{ var => 'permissionLevels{record_answers_when_acting_as_student}',
		  doc => 'Can submit answers for a student',
		  doc2 => 'When acting as a student, this permission level and higher can submit answers for that student.',
		  type => 'permission'},
		{ var => 'permissionLevels{report_bugs}',
		  doc => 'Can report bugs',
		  doc2 => 'Users with at least this permission level get a link in the left panel for reporting bugs to the bug tracking system in Rochester',
		  type => 'permission'},
		{ var => 'permissionLevels{change_email_address}',
		  doc => 'Allowed to change their e-mail address',
		  doc2 => 'Users at this level and higher are allowed to change their e-mail address. Normally guest users are not allowed to change the e-mail address since it does not make sense to send e-mail to anonymous accounts.',
		  type => 'permission'},
		{ var => 'permissionLevels{view_answers}',
		  doc => 'Allowed to view past answers',
		  doc2 => 'These users and higher get the "Show Past Answers" button on the problem page.',
		  type => 'permission'},
		{ var => 'permissionLevels{view_unopened_sets}',
		  doc => 'Allowed to view problems in sets which are not open yet',
		  type => 'permission'},
		{ var => 'permissionLevels{show_correct_answers_before_answer_date}',
		  doc => 'Allowed to see the correct answers before the answer date',
		  type => 'permission'},
		{ var => 'permissionLevels{show_solutions_before_answer_date}',
		  doc => 'Allowed to see solutions before the answer date',
		  type => 'permission'},
		{ var => 'permissionLevels{can_show_old_answers_by_default}',
		  doc => 'Can show old answers by default',
		  doc2 => 'When viewing a problem, WeBWorK usually puts the previously submitted answer in the answer blank if it is before the due date.  Below this level, old answers are never initially shown.  Typically, that is the desired behaviour for guest accounts.',
		  type => 'permission'},
		{ var => 'permissionLevels{can_always_use_show_old_answers_default}',
		  doc => 'Can always show old answers by default',
		  doc2 => 'When viewing a problem, WeBWorK usually puts the previously submitted answer in the answer blank if it is before the due date.  At this level and higher, old answers are always shown (independent of the answer date).',
		  type => 'permission'},
	],
	['PG - Problem Display/Answer Checking',
		{ var => 'pg{displayModes}',
		  doc => 'List of display modes made available to students',
		  doc2 => 'When viewing a problem, users may choose different methods of rendering
 formulas via an options box in the left panel.  Here, you can adjust what display modes are
 listed.<p>
 Some display modes require other software to be installed on the server.  Be sure to check
 that all display modes selected here work from your server.<p>
 The display modes are <ul>
<li> plainText: shows the raw LaTeX srings for formulas.
<li> formattedText: formulas are passed through the external program <code>tth</code>,
 which produces an HTML version of them.  Some browsers do not display all of the fonts
 properly.
<li> images: produces images using the external programs LaTeX and dvipng.
<li> jsMath: uses javascript to place symbols, which may come from fonts or images
 (the choice is configurable by the end user).
<li> MathJax: a successor to jsMath, uses javascript to place render mathematics.
<li> asciimath: renders formulas client side using ASCIIMathML
<li> LaTeXMathML: renders formulas client side using LaTeXMathML
</ul>
<p>
You must use at least one display mode.  If you select only one, then the options box will
 not give a choice of modes (since there will only be one active).',
		  min  => 1,
		  values => ["MathJax", "images", "plainText", "formattedText",  "jsMath",  "asciimath", "LaTeXMathML"],
		  type => 'checkboxlist'},

		{ var => 'pg{options}{displayMode} ',
		  doc => 'The default display mode',
		  doc2 => 'Enter one of the allowed display mode types above.  See \'display modes entry\' for descriptions.',
		  min  => 1,
		  type => 'text'},
		{ var  => 'pg{specialPGEnvironmentVars}{DragMath}',
          doc  => 'Use DragMath editor for answer entry',
          doc2 => 'Set to true to display pencil DragMath equation editor next to each answer box',
          type => 'boolean'}, 
		{ var => 'pg{options}{showEvaluatedAnswers}',
		  doc => 'Display the evaluated student answer',
		  doc2 => 'Set to true to display the "Entered" column which automatically shows the evaluated student answer, e.g. 1 
		  if student input is sin(pi/2). If this is set to false, e.g. to save space in the response area, the student can 
		  still see their evaluated answer by hovering the mouse pointer over the typeset version of their answer.',
		  type => 'boolean'},		  
 

		{ var => 'pg{ansEvalDefaults}{useBaseTenLog}',
		  doc => 'Use log base 10 instead of base <i>e</i>',
		  doc2 => 'Set to true for log to mean base 10 log and false for log to mean natural logarithm',
		  type => 'boolean'},

		{ var => 'pg{ansEvalDefaults}{useOldAnswerMacros}',
		  doc => 'Use older answer checkers',
		  doc2 => 'During summer 2005, a newer version of the answer checkers was implemented for answers which are functions and numbers.  The newer checkers allow more functions in student answers, and behave better in certain cases.  Some problems are specifically coded to use new (or old) answer checkers.  However, for the bulk of the problems, you can choose what the default will be here.  <p>Choosing <i>false</i> here means that the newer answer checkers will be used by default, and choosing <i>true</i> means that the old answer checkers will be used by default.',
		  type => 'boolean'},

		{ var => 'pg{ansEvalDefaults}{defaultDisplayMatrixStyle}',
		  doc => 'Control string for displaying matricies',
		  doc2 => 'String of three characters for defining the defaults for displaying matricies.  The first and last characters give the left and right delimiters of the matrix, so usually one of ([| for a left delimiter, and one of )]| for the right delimiter.  It is also legal to specify "." for no delimiter. <p> The middle character indicates how to display vertical lines in a matrix (e.g., for an augmented matrix).  This can be s for solid lines and d for dashed lines.  While you can specify the defaults, individual problems may override these values.',
		  type => 'text'},

		{ var => 'pg{ansEvalDefaults}{numRelPercentTolDefault}',
		  doc => 'Allowed error, as a percentage, for numerical comparisons',
		  doc2 => "When numerical answers are checked, most test if the student's answer
 is close enough to the programmed answer be computing the error as a percentage of
 the correct answer.  This value controls the default for how close the student answer
 has to be in order to be marked correct.
<p>
A value such as 0.1 means 0.1 percent error is allowed.",
		  type => 'number'},
		{ var => 'pg{ansEvalDefaults}{reducedScoringPeriod}',
		  doc => 'Length of Reduced Credit Period in minutes',
		  doc2 => 'The Reduced Credit Period (formally called the Reduced Scoring Period) is a period before the due date during which
 all additional work done by the student counts at a reduced rate. Here is where 
 you set the length of this period in minutes. If this value is greater than 0, a
 message like "This assignment has a Reduced Credit Period that begins 11/08/2009 
 at 06:17pm EST and ends on the due date, 11/10/2009 at 06:17pm EST. During this 
 period all additional work done counts 50% of the original." will be displayed.<p>
 To use this, you also have to enable Reduced Credit for individual assignments by
 editing the set data using the Hmwk Sets Editor.<p>
 This works with the avg_problem_grader (which is the the default grader) and the 
 std_problem_grader (the all or nothing grader).  It will work with custom graders
 if they are written appropriately.' ,
		  type => 'number'},
		{ var => 'pg{ansEvalDefaults}{reducedScoringValue}',
		  doc => 'Value of work done in Reduced Credit Period' ,
		  doc2 => 'The Reduced Credit Period (formally called the Reduced Scoring Period) is a period before the due date during which
 all additional work done by the student counts at a reduced rate. Here is where 
 you set the reduced rate which must be a number in the interval [0,1]. 1 means no 
 reduction. For example if this value is .5 and a student views a problem during the
 Reduced Credit Period, they will see the message "You are in the Reduced Credit 
 Period: All additional work done counts 50% of the original." <p>
 To use this, you also have to enable Reduced Credit for individual assignments by
 editing the set data using the Hmwk Sets Editor.<p>
 This works with the avg_problem_grader (which is the the default grader) and the 
 std_problem_grader (the all or nothing grader).  It will work with custom graders
 if they are written appropriately.' ,
		  type => 'number'},
	],
	['E-Mail',
		{ var => 'mail{feedbackSubjectFormat}',
		  doc => 'Format for the subject line in feedback e-mails',
		  doc2 => 'When students click the <em>Email Instructor</em> button
 to send feedback, WeBWorK fills in the subject line.  Here you can set the
 subject line.  In it, you can have various bits of information filled in
 with the following escape sequences.
<p>
<ul>
<li> %c = course ID
<li> %u = user ID
<li> %s = set ID
<li> %p = problem ID
<li> %x = section
<li> %r = recitation
<li> %% = literal percent sign
</ul>',
		  width => 45,
		  type => 'text'},
		{ var => 'mail{feedbackVerbosity}',
		  doc => 'E-mail verbosity level',
		  doc2 => 'The e-mail verbosity level controls how much information is
 automatically added to feedback e-mails.  Levels are
<ol>
<li value="0"> send only the feedback comment and context link
<li value="1"> as in 0, plus user, set, problem, and PG data
<li value="2"> as in 1, plus the problem environment (debugging data)
</ol>',
		  type => 'number'
		},
		{ var => 'mail{allowedRecipients}',
		  doc => 'E-mail addresses which can receive e-mail from a pg problem',
		  doc2 => 'List of e-mail addresses to which e-mail can be sent by a problem. Professors need to be added to this list if questionaires are used, or other WeBWorK problems which send e-mail as part of their answer mechanism.',
		  type => 'list'},
		{ var => 'permissionLevels{receive_feedback}',
		  doc => 'E-mail feedback from students automatically sent to this permission level and higher:',
		  doc2 => 'Users with this permssion level or greater will automatically be sent feedback from students (generated when they use the "Contact instructor" button on any problem page).  In addition the feedback message will be sent to addresses listed below.  To send ONLY to addresses listed below set permission level to "nobody".',
		  type => 'permission'},

		{ var => 'mail{feedbackRecipients}',
		  doc => 'Additional addresses for receiving feedback e-mail.',
		  doc2 => 'By default, feeback is sent to all users above who have permission to receive feedback. Feedback is also sent to any addresses specified in this blank. Separate email address entries by commas.',
		  type => 'list'},
	]
];




################################################################################
# Site wide overrides are entered into the file localOverrides.conf
################################################################################


include("conf/localOverrides.conf");
1; #final line of the file to reassure perl that it was read properly.
