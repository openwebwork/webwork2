#!perl

# This file is used to set up the default WeBWorK course environment for all
# requests. Values may be overwritten by the course.conf for a specific course.
# All package variables set in this file are added to the course environment.
# If you wish to set a variable here but omit it from the course environment,
# use the "my" keyword. The $webwork_dir variable is set in the WeBWorK Apache
# configuration file (webwork.apache-config) and is available for use here. In
# addition, the $courseName variable holds the name of the current course.

# YOU SHOULD NOT NEED TO EDIT THIS FILE!!
# All site-specific settings such as file locations and web addresses are
# configured in site.conf.  If you want to override any settings in this
# file, you can put a directive in localOverrides.conf.

include("conf/site.conf");
include("VERSION");  # get WW version
# The version of PG is now obtained from the file pg/VERSION
# using code added to CourseEnvironment.pm
# with this one exception include can only read files under the webwork2 directory

################################################################################
# site.conf  should contain basic information about directories and URLs on
# your server
################################################################################

################################################################################
# Mail Settings
################################################################################

# $generic_sender_name will be used as the "From:" name on all feedback emails
# sent without a defined user.
$generic_sender_name = '';

# The following variables will override the "From:" address in messages sent by
# the named feature.
$feedback_sender_email = ''; # For student feedback
$instructor_sender_email = ''; # For instructors emailing students
$jitar_sender_email = ''; # For notifications of incomplete JiTaR sets

# By default, feedback is sent to all users who have permission to
# receive_feedback in a course. If this list is non-empty, feedback is also sent
# to the addresses specified here.
#
# * If you want to disable feedback altogether, leave this empty and set
#   $permissionLevels{submit_feedback} = 'nobody'. This will cause the
#   feedback button to go away as well.
#
# * If you want to send email ONLY to addresses in this list, set
#   $permissionLevels{receive_feedback} = 'nobody'.
#
# It's often useful to set this in the course.conf to change the behavior of
# feedback for a specific course.
#
# Items in this list may be bare addresses, or RFC822 mailboxes, like:
#   'Joe User <joe.user@example.com>'
# The advantage of this form is that the resulting email will include the name
# of the recipient in the "To" field of the email.

$mail{feedbackRecipients}    = [
	#'prof1@yourserver.yourdomain.edu',
	#'prof2@yourserver.yourdomain.edu',
];

# Feedback subject line -- the following escape sequences are recognized:
#
#   %c = course ID
#   %u = user ID
#   %s = set ID
#   %p = problem ID
#   %x = section
#   %r = recitation
#   %% = literal percent sign
#

$mail{feedbackSubjectFormat} = "[WWfeedback] course:%c user:%u set:%s prob:%p sec:%x rec:%r";

# feedbackVerbosity:
#  0: send only the feedback comment and context link
#  1: as in 0, plus user, set, problem, and PG data
#  2: as in 1, plus the problem environment (debugging data)
$mail{feedbackVerbosity}     = 1;

# Should the studentID be included in the feedback email when feedbackVerbosity > 0:
# The default is yes
$blockStudentIDinFeedback = 0;

# Defines the initial height of the Mail Merge editor window
# FIXME: should this be here? it's UI, not mail
# FIXME: replace this with the auto-size method that TWiki uses
$mail{editor_window_rows}    = 15;

##################################################################################
# Customizing the action of the "Email your instructor" button
##################################################################################

# Customizing the behavior for this button is best done by copying the lines below, entering them
# in the localOverrides.conf file and making the desired modifications.
# Then you will not need to update these modifications
# when you download a new version of WeBWorK.

# Use this to customize the text of the feedback button.
$feedback_button_name = "Email Instructor";

# If this value is true, feedback will only be sent to users with the same
# section as the user initiating the feedback.
$feedback_by_section = 0;

# If the variable below is set to a non-empty value (i.e. in course.conf), WeBWorK's usual
# email feedback mechanism  will be replaced with a link to the given URL.
# See also $feedback_button_name, above.

$courseURLs{feedbackURL} = "";

# If the variable below is set to a non-empty value (i.e. in course.conf),
# WeBWorK's usual email feedback mechanism  will be replaced with a link to the given URL and
# a POST request with information about the problem including the HTML rendering
# of the problem will be sent to that URL.
# See also $feedback_button_name, above.

#$courseURLs{feedbackFormURL} = "http://www.mathnerds.com/MathNerds/mmn/SDS/askQuestion.aspx";  #"http://www.tipjar.com/cgi-bin/test";
$courseURLs{feedbackFormURL} = "";

################################################################################
# Theme
################################################################################

$defaultTheme = "math4";

# The institution logo should be an image file in the theme's images folder
$institutionLogo = 'maa_logo.svg';
$institutionURL  = 'http://www.maa.org';
$institutionName = 'MAA (Mathematical Association of America)';

################################################################################
# Achievements
################################################################################
$achievementsEnabled = 0;
$achievementItemsEnabled = 0;
$achievementPointsPerProblem = 5;
$achievementPointsPerProblemReduced = 3;
$achievementPreambleFile = "preamble.at";
$achievementExcludeSet = [];
$mail{achievementEmailFrom} = '';
$showCourseHomeworkTotals = 1;

################################################################################
# Editor
################################################################################
$editor{author} = '';
$editor{authorInstitute} = '';
$editor{textTitle} = '';
$editor{textEdition} = '';
$editor{textAuthor} = '';

################################################################################
# Enter key behavior
################################################################################
$pg{options}{enterKey} = 'preview';

################################################################################
# showMeAnother
################################################################################
# switch to enable showMeAnother button
$pg{options}{enableShowMeAnother} = 0;
# default number of attempts before enabling show me another
$pg{options}{showMeAnotherDefault} = -1;
# maximum number of times (per problem) the button can be used
$pg{options}{showMeAnotherMaxReps} = 3;
# maximum number of attempts to check if changing the problem seed
# changes the problem
$pg{options}{showMeAnotherGeneratesDifferentProblem} = 5;
# showMeAnother options
$pg{options}{showMeAnother}=[
"SMAcheckAnswers",
"SMAshowSolutions",
"SMAshowCorrect",
"SMAshowHints",
];

################################################################################
# showHintsAfter
################################################################################
# Number of attempts after which hints will be shown to a student.
# Set to -1 to disable hints.
$pg{options}{showHintsAfter} = 2;

###############################################################################
# periodicRandomization
################################################################################
# switch to enable periodic re-randomization
$pg{options}{enablePeriodicRandomization} = 0;
# course-wide default period for re-randomization, should be an integer
# the value of 0 disables re-randomization
$pg{options}{periodicRandomizationPeriod} = 5;
# Show the correct answer after a student's last attempt at the current version
# and before a new version is requested.
$pg{options}{showCorrectOnRandomize} = 0;

###############################################################################
# answer feedback options
################################################################################

# If set to 1, then answer feedback is automatically shown when returning to an
# answered problem or after answers are available for the assignment. This is
# present in problems when a student opens the problem without the student
# needing to click the "Check Answers" button.
$pg{options}{automaticAnswerFeedback} = 1;

# If set to 1, then a "Reveal" button must be clicked to reveal correct answers
# even after the answer date.
$pg{options}{correctRevealBtnAlways} = 0;

################################################################################
# Single Problem Grader
################################################################################
# When using the single problem grader, should the problem score be entered in as
#   Percent - Percent value
#   Point   - Point value
#   Both    - Show inputs for both percent and point values.
# Note, the problem score is always saved as a percent, so point values will be
# rounded to the nearest whole percent.
$problemGraderScore = 'Percent';

################################################################################
# Waive Explanations
################################################################################
# switch to remove explanation essay block from questions that have one
$pg{specialPGEnvironmentVars}{waiveExplanations} = 0;

################################################################################
# Language
################################################################################

# This must be a language code for a language that is supported by webwork.
# Note that this is also used for the locale for date/time formats.
# Check the directory lib/WeBWorK/Localize to see which languages are
# currently supported (e.g. en, es, fr, he-IL, tr, zh-HK).
$language = "en";

# $perProblemLangAndDirSettingMode controls how and whether LANG and/or DIR
#    attributes are added to the DIV element enveloping a problem
#    which helps handle proper display of problems with a text direction
#    different from that used course-wide. Ex: enables English problems to
#    be displayed properly in a Hebrew course site, which helps select problems
#    to be translated to Hebrew.
$perProblemLangAndDirSettingMode = "force::ltr";

################################################################################
# Student Date Format
################################################################################

# This is the format of the dates displayed for students.  This can be created
# from the strftime patterns documented at https://metacpan.org/pod/DateTime#strftime-Patterns,
# or can be one of the localizable DateTime::Locale::FromData formats
# 'datetime_format_short', 'datetime_format_medium', 'datetime_format_long', or
# 'datetime_format_full'.  See https://metacpan.org/pod/DateTime::Locale::FromData.
$studentDateDisplayFormat = 'datetime_format_long';

################################################################################
# System-wide locations (directories and URLs)
################################################################################

# The root directory, set by webwork_root variable in Apache configuration.
$webworkDirs{root}          = "$webwork_dir";

# Location of system-wide data files.
$webworkDirs{DATA}          = "$webworkDirs{root}/DATA";

# Used for temporary storage of uploaded files.
$webworkDirs{uploadCache}   = "$webworkDirs{DATA}/uploads";

# Location of utility programs.
$webworkDirs{bin}           = "$webworkDirs{root}/bin";

# Location of configuration files.
$webworkDirs{conf}          = "$webworkDirs{root}/conf";

# Location of assets (tex, pg, themes)
$webworkDirs{assets}        = "$webworkDirs{root}/assets";

# Location of the distribution hardcopy themes.
$webworkDirs{hardcopyThemes} = "$webworkDirs{assets}/hardcopyThemes";

# Location of course directories.
$webworkDirs{courses}       = "$webwork_courses_dir" || "$webworkDirs{root}/courses";

# Contains log files.
$webworkDirs{logs}          = "$webworkDirs{root}/logs";

# Contains non-web-accessible temporary files, such as TeX working directories.
$webworkDirs{tmp}           = "$webworkDirs{root}/tmp";

# The (absolute) destinations of symbolic links that are OK for the FileManager to follow.
#   (any subdirectory of these is a valid target for a symbolic link.)
# For example:
#    $webworkDirs{valid_symlinks} = ["$webworkDirs{courses}/modelCourse/templates","/ww2/common/sets"];
$webworkDirs{valid_symlinks}   = [];

# Location of the webwork2.sty and its dependencies used for hardcopy generation.
$webworkDirs{assetsTex}        = "$webworkDirs{assets}/tex";

################################################################################
##### The following locations are web-accessible.
################################################################################

# The root URL (usually /webwork2), set by <Location> in Apache configuration.
$webworkURLs{root}          = "$webwork_url";

# Location of system-wide web-accessible files, such as equation images, and
# help files.
$webworkDirs{htdocs}        = "$webwork_htdocs_dir" || "$webworkDirs{root}/htdocs";
$webworkURLs{htdocs}        = "$webwork_htdocs_url";

# Location of web-accessible temporary files, such as equation images.
# These two should be set in localOverrides.conf -- not here since this can be overwritten by new versions.
$webworkDirs{htdocs_temp}   = "$webworkDirs{htdocs}/tmp";
$webworkURLs{htdocs_temp}   = "$webworkURLs{htdocs}/tmp";

# Location of cached equation images.
$webworkDirs{equationCache} = "$webworkDirs{htdocs_temp}/equations";
$webworkURLs{equationCache} = "$webworkURLs{htdocs_temp}/equations";

# Location of theme templates.
$webworkDirs{themes}     = "$webworkDirs{htdocs}/themes";

# Location of localization directory.
$webworkDirs{localize} = "$webworkDirs{root}/lib/WeBWorK/Localize";

# URL of general WeBWorK documentation.
$webworkURLs{docs}          = "https://webwork.maa.org";

# URLs for new issues in Github.
$webworkURLs{webwork2BugReporter} = "https://github.com/openwebwork/webwork2/issues/new";
$webworkURLs{OPLBugReporter}      = "https://github.com/openwebwork/webwork-open-problem-library/issues/new";

# URL of WeBWorK on GitHub
$webworkURLs{GitHub}        = "https://github.com/openwebwork";

# Registration form URL, security signup mail address
$webworkURLs{serverRegForm} = "https://forms.gle/vrqpKiRHritnQNf37";
$webworkURLs{wwSecurityAnnounce} = "https://groups.google.com/g/ww-security-announce";
$webworkSecListManagers = 'ww-security-announce+managers@googlegroups.com';

# URLs in the Wiki
$webworkURLs{WikiMain}      = "https://webwork.maa.org/wiki/";
$webworkURLs{SiteMap}       = "https://webwork.maa.org/wiki/WeBWorK_Sites";

# URL for help buttons on the PGProblemEditor pages:
$webworkURLs{MathObjectsHelpURL}      ='https://webwork.maa.org/wiki/Category:MathObjects';
$webworkURLs{PGLabHelpURL}            ='https://demo.webwork.rochester.edu/webwork2/wikiExamples/MathObjectsLabs2/2?login_practice_user=true';
$webworkURLs{PGMLHelpURL}             ='https://demo.webwork.rochester.edu/webwork2/cervone_course/PGML/1?login_practice_user=true';
$webworkURLs{AuthorHelpURL}           ='https://webwork.maa.org/wiki/Category:Authors';

# Location of CSS
# $webworkURLs{stylesheet}    = "$webworkURLs{htdocs}/css/${defaultTheme}.css";
# this is never used -- changing the theme from the config panel
# doesn't appear to reset the theme in time?
# It's better to refer directly to the .css file in the system.template
# <link rel="stylesheet" type="text/css" href="<!--#url type="webwork" name="htdocs"-->/css/math.css"/>

################################################################################
# Problem library options
################################################################################
#
# The problemLibrary configuration data should now be set in localOverrides.conf

# For configuration instructions, see:
# https://webwork.maa.org/wiki/Open_Problem_Library
# The directory containing the open problem library files.
# Set the root to "" if no problem

#RE-CONFIGURE problemLibrary values in localOverrides.conf
# if these defaults are not correct.
#################################################
$problemLibrary{root}       = "/opt/webwork/libraries/webwork-open-problem-library/OpenProblemLibrary";
$contribLibrary{root}       = "/opt/webwork/libraries/webwork-open-problem-library/Contrib";
$problemLibrary{version}    = "2.5";
###########################################################

# Problem Library SQL database connection information
$problemLibrary_db = {
        dbsource => $database_dsn,
        user     => $database_username,
        passwd   => $database_password,
        storage_engine => 'MYISAM',
};

$problemLibrary{tree} = 'library-directory-tree.json';

# These flags control if statistics on opl problems are shown in the library
# browser.  If you want to include local statistics you will need to
# run webwork2/bin/update-OPL-statistics on a regular basis.
$problemLibrary{showLibraryLocalStats} = 1;
# This flag controls whether global statistics will be displayed
$problemLibrary{showLibraryGlobalStats} = 1;

################################################################################
# Defaults for course-specific locations (directories, URLs, and links)
################################################################################

# The root directory of the current course. (The ID of the current course is
# available in $courseName.)
$courseDirs{root}        = "$webworkDirs{courses}/$courseName";

# Location of course-specific data files.
$courseDirs{DATA}        = "$courseDirs{root}/DATA";

# Location of course HTML files, passed to PG.
$courseDirs{html}        = "$courseDirs{root}/html";
$courseURLs{html}        = "$webwork_courses_url/$courseName";

# Location of course image files, passed to PG.
$courseDirs{html_images} = "$courseDirs{html}/images";

# Location of web-accessible, course-specific temporary files, like static and
# dynamically-generated PG graphics.
$courseDirs{html_temp}   = "$webworkDirs{htdocs_temp}/$courseName";
$courseURLs{html_temp}   = "$webworkURLs{htdocs_temp}/$courseName";

# Location of course-specific logs, like the transaction log.
$courseDirs{logs}        = "$courseDirs{root}/logs";

# Location of scoring files.
$courseDirs{scoring}     = "$courseDirs{root}/scoring";

# Location of PG templates and set definition files.
$courseDirs{templates}   = "$courseDirs{root}/templates";

# Location of hardcopy theme files.
$courseDirs{hardcopyThemes} = "$courseDirs{templates}/hardcopyThemes";

# Location of course achievement files.
$courseDirs{achievements}              = "$courseDirs{templates}/achievements";
$courseDirs{achievement_notifications} = "$courseDirs{achievements}/notifications";
$courseDirs{achievements_html}         = "$courseDirs{html}/achievements";                     #contains badge icons
$courseURLs{achievements}              = "$courseURLs{html}/achievements";

# Location of course-specific macro files.
$courseDirs{macros}      = "$courseDirs{templates}/macros";

# Location of mail-merge templates.
$courseDirs{email}       = "$courseDirs{templates}/email";

# Location of temporary editing files.
$courseDirs{tmpEditFileDir}  = "$courseDirs{templates}/tmpEdit";

# mail merge status directory
$courseDirs{mailmerge}   = "$courseDirs{DATA}/mailmerge";

# course links that are regulated by webwork2
$courseLinks{Library}             = [$problemLibrary{root},                         "$courseDirs{templates}/Library"];
$courseLinks{Contrib}             = [$contribLibrary{root},                         "$courseDirs{templates}/Contrib"];
$courseLinks{capaLibrary}         = ["$contribLibrary{root}/CAPA",                  "$courseDirs{templates}/capaLibrary"];
$courseLinks{Student_Orientation} = ["$webworkDirs{assets}/pg/Student_Orientation", "$courseDirs{templates}/Student_Orientation"];

################################################################################
# System-wide files
################################################################################

# Location of this file.
$webworkFiles{environment}                      = "$webworkDirs{conf}/defaults.conf";

# Flat-file database used to protect against MD5 hash collisions. TeX equations
# are hashed to determine the name of the image file. There is a tiny chance of
# a collision between two TeX strings. This file allows for that. However, this
# is slow, so most people chose not to worry about it. Set this to "" if you
# don't want to use the equation cache file.
$webworkFiles{equationCacheDB}                  = ""; # "$webworkDirs{DATA}/equationcache";

################################################################################
# Hardcopy Theme
################################################################################

# Hardcopy themes are .xml files.  See assets/hardcopThemes/README.md for details
# about their structure.  The site themes are files in $webworkDirs{hardcopyThemes}.
# $hardcopyThemes identifies which site themes are enabled.
$hardcopyThemes = [
	'basic.xml',
	'basicTwoCol.xml',
	'boxed.xml',
	'boxedRows.xml',
	'boxedTwoCol.xml',
	'classic.xml',
	'classicTwoCol.xml',
	'empty.xml',
	#'hebrew.xml',
	#'hebrewTwoCol.xml',
	'oneColumn.xml',
	'twoColumn.xml',
];

# A course may have additional themes in $courseDirs{hardcopyThemes}.  All such
# "course" hardcopy themes are effectively enabled and offered for use when
# selecting a hardcopy theme.  You can move such files or rename them to not
# have a .xml extension if you don't want them to be offered for use.

# If a course hardcopy theme has the same name as a site hardcopy theme, the
# course hardcopy theme is the one that is used.

# Default hardcopy themes (should either be an enabled site theme or a theme in
# the course hardcopyThemes folder
$hardcopyTheme = 'twoColumn.xml';
$hardcopyThemePGEditor = 'empty.xml';

################################################################################
# Hardcopy snippets are used in constructing a TeX file for hardcopy output.
# They should contain TeX code unless otherwise noted.
################################################################################

# The setHeader precedes each set in hardcopy output. It is a PG file.
# This is the default file which is used if a specific files is not selected
$webworkFiles{hardcopySnippets}{setHeader}     = "$webworkDirs{assets}/pg/defaultSetHeader.pg";

################################################################################
##### Screen snippets are used when displaying problem sets on the screen.
################################################################################

# The set header is displayed on the problem set page. It is a PG file.
# This is the default file which is used if a specific files is not selected
$webworkFiles{screenSnippets}{setHeader}         = "$webworkDirs{assets}/pg/defaultSetHeader.pg";

# A PG template for creation of new problems.
$webworkFiles{screenSnippets}{blankProblem}    = "$webworkDirs{assets}/pg/newProblem.pg";

# A site info "message of the day" file
$webworkFiles{site_info}                       = "$webworkDirs{htdocs}/site_info.txt";

################################################################################
# Course-specific files
################################################################################

# The course configuration file.
$courseFiles{environment} = "$courseDirs{root}/course.conf";

# The course simple configuration file (holds web-based configuration).
$courseFiles{simpleConfig} = "$courseDirs{root}/simple.conf";

# File contents are displayed after login, on the problem sets page. Path given
# here is relative to the templates directory.
$courseFiles{course_info} = "course_info.txt";

# File contents are displayed on the login page. Path given here is relative to
# the templates directory.
$courseFiles{login_info}  = "login_info.txt";

# These course specific files cannot be edited from the File Manager for safety reasons except
# by an administrator.  These are paths relative to the course directory.
$uneditableCourseFiles = [
	'simple.conf',
	'course.conf',
];

# Additional library buttons can be added to the Library Browser (SetMaker.pm)
# by adding the libraries you want to the following line.  For each key=>value
# in the list, if a directory (or link to a directory) with name 'key' appears
# in the templates directory, then a button with name 'value' will be placed at
# the top of the problem browser.  (No button will appear if there is no
# directory or link with the given name in the templates directory.)  For
# example,
#
#     $courseFiles{problibs} = {rochester => "Rochester", asu => "ASU"};
#
# would add two buttons, one for the Rochester library and one for the ASU
# library, provided templates/rochester and templates/asu exists either as
# subdirectories or links to other directories. The "OPL Directory" button
# activated below gives access to all the directories in the National
# Problem Library.
#
$courseFiles{problibs}    = {
	Library          => "OPL Directory",
	Contrib          => "Contrib", # remember to create link from Contrib to Contrib
	                               # library directory
	capaLibrary      => "CAPA",    # remember to create link from capaLibrary to CAPA
	                               # in contrib
};

################################################################################
# Status system
################################################################################

# This is the default status given to new students and students with invalid
# or missing statuses.
$default_status = "Enrolled";

# The first abbreviation in the abbreviations list is the canonical
# abbreviation, and will be used when setting the status value in a user record
# or an exported classlist file.
#
# Results are undefined if more than one status has the same abbreviation.
#
# The four behaviors that are controlled by status are:
#   allow_course_access   => is this user allowed to log in?
#   include_in_assignment => is this user included when assigning as set to "all" users?
#   include_in_stats      => is this user included in statistical reports?
#   include_in_email      => is this user included in emails sent to the class?
#   include_in_scoring    => is this user included in score reports?

%statuses = (
	Enrolled => {
		abbrevs => [qw/ C c current enrolled /],
		behaviors => [qw/ allow_course_access include_in_assignment include_in_stats include_in_email include_in_scoring /],
	},
	Audit => {
		abbrevs => [qw/ A a audit /],
		behaviors => [qw/ allow_course_access include_in_assignment include_in_stats include_in_email /],
	},
	Observer => {
		abbrevs => [qw/ O o observer /],
		behaviors => [qw/ allow_course_access include_in_assignment /],
	},
	Drop => {
		abbrevs => [qw/ D d drop withdraw /],
		behaviors => [qw/  /],
	},
	Proctor => {
		abbrevs => [qw/ P p proctor /],
		behaviors => [qw/  /],
	},
);

################################################################################
# Database options
################################################################################

# This sets the max course id length.  It might need to be changed depending
# on what database tables are present.  Mysql allows a max table length of 64
# characters.  With the ${course_id}_global_user_achievement table that means
# the max ${course_id} is exactly 40 characters.
# Reference:  https://dev.mysql.com/doc/refman/8.0/en/identifier-length.html

$maxCourseIdLength = 40;

################################################################################
# Logs
################################################################################


# Logs data about how long it takes to process problems. (Do not confuse this
# with the /other/ timing log which can be set by WeBWorK::Timing and is used
# for benchmarking system performance in general. At some point, this timing
# mechanism will be deprecated in favor of the WeBWorK::Timing mechanism.)
$webworkFiles{logs}{timing}         = "$webworkDirs{logs}/timing.log";

# Logs data about how long it takes to process problems. (Do not confuse this
# with the /other/ timing log which can be set by WeBWorK::Timing and is used
# for benchmarking system performance in general. At some point, this timing
# mechanism will be deprecated in favor of the WeBWorK::Timing mechanism.)
$webworkFiles{logs}{render_timing}         = "$webworkDirs{logs}/render_timing.log";

# Logs courses created via the web-based Course Administration module.
$webworkFiles{logs}{hosted_courses} = "$webworkDirs{logs}/hosted_courses.log";

# The transaction log contains data from each recorded answer submission. This
# is useful if the database becomes corrupted.
$webworkFiles{logs}{transaction}    = "$webworkDirs{logs}/${courseName}_transaction.log";

# The answer log stores a history of all users' submitted answers.
$courseFiles{logs}{answer_log}      = "$courseDirs{logs}/answer.log";

# Log logins.
$courseFiles{logs}{login_log}       = "$courseDirs{logs}/login.log";

# Log for almost every click.  By default it is the empty string, which
# turns this log off.  If you want it turned on, we suggest
#                "$courseDirs{logs}/activity.log"
# When turned on, this log can get quite large.
$courseFiles{logs}{activity_log} = '';

################################################################################
# Site defaults (Usually overridden in localOverrides.conf)
################################################################################

# The default_copy_from_course is used by default when creating a new course.
# Its templates folder, html folder, course.conf file, and simple.conf file
# might be copied into a new course. This course might not be a true course;
# it might only have a directory structure and no presense in the database.
# If it is a real course, then also its title, institution, non-student users,
# achievements, and sets can be copied.
$siteDefaults{default_copy_from_course} ="modelCourse";

# Provide a list of model courses which are not real courses, but from which
# the templates for a new course can be copied. This list helps exclude such
# non-real courses when that is appopriate.
$modelCoursesForCopy = [ "modelCourse" ];

################################################################################
# Authentication system
################################################################################

# Select the authentication module to use for normal logins.
# If this value is a string, then that authentication module will be used.  If
# this value is a reference to an array of strings, then each string in the
# array will be successively tested to see if it provides a module that can
# handle the authentication request (by calling that module's
# request_has_data_for_this_verification_module method).  The first module that
# responds affirmatively will be used.
$authen{user_module} = 'WeBWorK::Authen::Basic_TheLastOption';

# Select the authentication module to use for proctor logins.
# A string or a hash is accepted, as above.
$authen{proctor_module} = "WeBWorK::Authen::Proctor";

# List of authentication modules that may be used to enter the admin course.
# This is used instead of $authen{user_module} when logging into the admin course.
$authen{admin_module} = ['WeBWorK::Authen::Basic_TheLastOption'];

################################################################################
# Authorization system (Make local overrides in localOverrides.conf )
################################################################################

# this section lets you define which groups of users can perform which actions.

# this hash maps a numeric permission level to the name of a role. the number
# assigned to a role is significant -- roles with higher numbers are considered
# "more privileged", and are included when that role is listed for a privilege
# below.
#
%userRoles = (
	guest         => -5,
	student       => 0,
	login_proctor => 2,
	grade_proctor => 3,
	ta            => 5,
	professor     => 10,
	admin         => 20,
	nobody        => 99999999, # insure that nobody comes at the end
);

# this hash maps operations to the roles that are allowed to perform those
# operations. If a single role is listed, the role listed and any role with
# a higher permission level (in the %userRoles hash) will be allowed to perform
# the operation. If the role is undefined, no users will be allowed to perform
# the operation. The receive_feedback permission level can be also be an array
# reference containing a list of roles. If that is the case, only those exact
# roles are allowed to reeceive feedback emails.
#
%permissionLevels = (
	login                          => "guest",
	navigation_allowed             => "guest",
	use_two_factor_auth            => "student",
	report_bugs                    => "ta",
	submit_feedback                => "student",
	change_name                    => "student",
	change_password                => "student",
	change_email_address           => "student",
	change_pg_display_settings     => "student",

	proctor_quiz_login             => "login_proctor",
	proctor_quiz_grade             => "grade_proctor",
	view_proctored_tests           => "student",
	view_hidden_work               => "ta",

	view_multiple_sets             => "ta",
	view_unopened_sets             => "ta",
	view_hidden_sets               => "ta",
	view_answers                   => "ta",
	view_ip_restricted_sets        => "ta",
	view_leaderboard               => "professor",
	view_leaderboard_usernames     => "professor",

	become_student                 => "professor",
	access_instructor_tools        => "ta",
	score_sets                     => "professor",
	problem_grader                 => "professor",
	send_mail                      => "professor",
	receive_feedback               => ['ta', 'professor', 'admin'],

	create_and_delete_problem_sets => "professor",
	assign_problem_sets            => "professor",
	modify_problem_sets            => "professor",
	modify_student_data            => "professor",
	modify_classlist_files         => "professor",
	modify_set_def_files           => "professor",
	modify_scoring_files           => "professor",
	modify_problem_template_files  => "professor",
	manage_course_files            => "professor",
	edit_achievements              => "professor",
	create_and_delete_courses      => "admin",
	modify_tags                    => "admin",
	edit_restricted_files          => "admin",

	##### Behavior of the interactive problem processor #####
	show_correct_answers_before_answer_date         => "ta",
	show_solutions_before_answer_date               => "ta",
	avoid_recording_answers                         =>  "nobody", # record the grade/status/state of everyone's entries.
	                                                              # Setting this to "ta" would record grade/status/state
	                                                              # for students but not TA's or professors;
	                                                              # TA's and above could avoid having their answers recorded.

	# controls if old answers can be shown
	can_show_old_answers                            => "student",
	check_answers_before_open_date                  => "ta",
	check_answers_after_open_date_with_attempts     => "guest",
	check_answers_after_open_date_without_attempts  => "guest",
	check_answers_after_due_date                    => "guest",
	check_answers_after_answer_date                 => "guest",
	can_check_and_submit_answers                    => "ta",
	can_use_show_me_another_early                   => "ta",
	create_new_set_version_when_acting_as_student   => undef,
	print_path_to_problem                           => "professor", # see "Special" PG environment variables
	always_show_hint                                => "professor",
	always_show_solution                            => "professor",
	record_set_version_answers_when_acting_as_student => undef,
	record_answers_when_acting_as_student           => undef,
	# "record_answers_when_acting_as_student" takes precedence
	# over the following for professors acting as students:
	record_answers_before_open_date                 => undef,
	record_answers_after_open_date_with_attempts    => "student",
	record_answers_after_open_date_without_attempts => undef,
	record_answers_after_due_date                   => undef,
	record_answers_after_answer_date                => undef,
	dont_log_past_answers                           => undef,
	                                                # controls logging of the responses to a question
	                                                # in the past answer data base
	                                                # and in the myCourse/logs/answer_log file.
	                                                # Activities of users with this permission enabled are not entered
	                                                # in these logs.  This might be used when collecting student data
	                                                # to avoid contaminating the data with TA and instructor activities.
	                                                # The professor setting means that  professor's answers are not logged or
	                                                # saved in the past answer database.

	# PG debugging
	show_resource_info                              => "admin",
	view_problem_debugging_info                     => "ta",
	show_pg_info                                    => "admin",
	show_answer_hash_info                           => "admin",
	show_answer_group_info                          => "admin",

	##### Behavior of the Hardcopy Processor #####
	download_hardcopy_multiuser  => "ta",
	download_hardcopy_multiset   => "ta",
	download_hardcopy_view_errors =>"professor",
	download_hardcopy_format_pdf => "guest",
	download_hardcopy_format_tex => "ta",
	download_hardcopy_change_theme=> "ta",

	##### Permission to edit a specific setting on the course configuration page #####
	# Each permission of this type must have the form change_config_[var]. Note
	# that the user must also have the permission modify_problem_sets to change
	# configuration settings. If a configuration option is not specifically set
	# for a setting, then the modify_problem_sets permission alone is
	# sufficient to change a configuration setting.

	#change_config_courseTitle    => "admin",
	change_config_lms_context_id                   => "admin",
	'change_config_LTI{v1p1}{BasicConsumerSecret}' => "admin",
	'change_config_LTI{v1p3}{PlatformID}'          => "admin",
	'change_config_LTI{v1p3}{ClientID}'            => "admin",
	'change_config_LTI{v1p3}{DeploymentID}'        => "admin",
	'change_config_LTI{v1p3}{PublicKeysetURL}'     => "admin",
	'change_config_LTI{v1p3}{AccessTokenURL}'      => "admin",
	'change_config_LTI{v1p3}{AccessTokenAUD}'      => "admin",
	'change_config_LTI{v1p3}{AuthReqURL}'          => "admin",

	# Do not confuse the permission to change a configuration permission with
	# the actual permission as in the following example. If this us uncommented,
	# then only admin users will be able to change the permission level for the
	# permission record_answers_when_acting_as_student. (Note the quoting
	# needed for this configuration value also.)
	#'change_config_permissionLevels{record_answers_when_acting_as_student}' => "admin",
);

# This is the default permission level given to new students and students with
# invalid or missing permission levels.
$default_permission_level = $userRoles{student};

# This sets the default fallback source to use for a user's password when a user
# account is created in a course. That is the source that will be shown by
# default in a select menu in the user interface, and the source that will be
# used by the importClassList.pl and addcourse scripts.  It can be one of
# 'user_id', 'first_name', 'last_name', or 'student_id', or can be set to '' (or
# anything not listed before).  If a user is created and no password is
# explicitly provided, then this source will used for the password (assuming
# that source value is also set).  If this is not one of the allowed sources,
# and if a password is not explicitly provided, then the user will be created
# without a password and will not be able to sign in with username and password.
# Note that this is only used at the time that a user is initially created in a
# course, and not when editing passwords at a later time.
$fallback_password_source = '';

################################################################################
# Session options
################################################################################

# $sessionTimeout defines seconds of inactivity before a user's session expires.
$sessionTimeout = 60*30;

# $sessionKeyLength defines the length (in characters) of the session key
$sessionKeyLength = 32;

# @sessionKeyChars lists the legal session key characters
@sessionKeyChars = ('A'..'Z', 'a'..'z', '0'..'9');

# Practice users are users who's names start with $practiceUser
# (you can comment this out to remove practice user support)
$practiceUserPrefix = "practice";

# Option for gateway tests; $gatewayGracePeriod is the time in seconds
# after the official due date during which we'll still grade the test
$gatewayGracePeriod = 120;

################################################################################
# Session Management
################################################################################

# Session management can be handled either using the key database, the
# traditional method, or by using signed session cookies.

# Setting $session_management_via="key" uses the key database for session
# management. If password authentication is used, then a user can opt to use a
# session cookie with a duration determined by the $sessionTimeout setting
# above by checking the "Remember Me" checkbox on the login page.

# Setting $session_management_via="session_cookies" uses a session cookie to
# manage the session. Note that even in this case a key is stored in the
# database which is compared to the key stored in the session cookie. The
# lifetime of the cookie is determined by the $sessionTimeout setting above.

# Note that the key database method is less secure as the key must be embeded in
# the page and added as a url parameter in order to maintain the session. These
# things can be accessed by malicious javascript. The session cookies are http
# only cookies which can not be accessed via javascript.

$session_management_via = "session_cookie";

################################################################################
# Cookie control settings
################################################################################

# Set the value of the samesite attribute of the session cookie:
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
# Notes about the $CookieSameSite options:
# The "None" setting should only be used with HTTPS and when $CookieSecure is
# set to 1 below. The "None" setting is also less secure and can allow certain
# types of cross-site attacks.  The "Strict" setting can break the links in the
# system generated feedback emails when read in a web mail client.  Due to those
# factors, the "Lax" setting is probably the optimal choice for typical webwork2
# servers.
$CookieSameSite = "Lax";

# Set the value of the secure cookie attribute.
$CookieSecure = 1;

# If $useSessionCookie is set to 1, then a "session" cookie will be used. This
# means that the cookie will be deleted when the browser session ends.
# Typically, this is when the browser is closed. Note that the browser defines
# when this is, and some browser's also allow sessions to be restored when the
# browser is reopened. In any case, a user's session will end when the session
# is idle for more than the number of seconds the $sessionTimeout value is set
# to.
$useSessionCookie = 0;

################################################################################
# Two Factor Authentication
################################################################################

# The following variables enable two factor authentication and control how it
# works. Two factor authentication only applies to courses that use password
# authentication, i.e., the Basic_TheLastOption user authentication module
# without an external authentication approach (like LTI, CAS, Shibboleth, etc.).
# It is recommended that two factor authentication be enabled for all courses
# that use password authentication. It is extremely highly recommended that this
# be enabled for the admin course. Two factor authentication works with an
# authenticator app on a mobile device (such as Google Authenticator,
# Microsoft authenticator, Twilio Authy, etc.).

# $twoFA{enabled} determines if two factor authentication is enabled for a
# course. If this is set to 0, then two factor authentication is disabled for
# all courses. If this is 1 (the default), then two factor authentication is
# enabled for all courses that use password authentication. If this is a string
# course name like 'admin', then two factor authentication is enabled only for
# that course. If this is an array of string course names, then two factor
# authentication is enabled only for those courses listed. This can also be set
# in a course's course.conf file. Note that only the values of 0 and 1 make
# sense there.
$twoFA{enabled} = 1;

# There are two methods that can be used to setup two factor authentication when
# a user signs in for the first time. The setup information can be emailed to
# the user, or can be directly displayed in the browser on the next page that is
# shown after password verification succeeds.
#
# If $twoFA{email_sender} is set, then the email approach will be used. In this
# case, after a user signs in and the password is verified, the user will be
# sent an email containing a QR code and instructions on how to set up a OTP
# generator app. This is probably a more secure way to set up two factor
# authentication, as it ensures the user setting it up is the correct user. Note
# that if a user does not have an email address, then the browser method below
# will be used as a fallback.
#
# If $twoFA{email_sender} is not set, then after a user signs in and the
# password is verified, the QR code, OTP link, and instructions will be
# displayed directly on the page in the browser. This is potentially less secure
# because a hacker could guess a username and password before a user has setup
# two factor authentication (particularly if the username and password are
# initially the same), and then the hacker would gain access to that user's
# account, and the actual user would be locked out. Note that you will need to
# use this option if your server can not send emails. Also note that no-reply
# addresses may be blocked by the email server or marked as spam. So it may be
# better to find a valid email address to use for this.
$twoFA{email_sender} = '';

# When a user signs in and enters the two factor authentication code, the user
# has the option to skip two factor verification on a given device for
# subsequent logins. That will only last for the amount of time set as the
# skip_verification_code_interval. By default this is set to one year. However,
# good security practices most likely recommend a shorter time interval for
# this. So change this value if you want to require a shorter and thus more
# secure time interval before users will need to enter the two factor
# authentication code again.
$twoFA{skip_verification_code_interval} = 3600 * 24 * 365;

################################################################################
# WeBWorK Caliper
################################################################################

# Caliper is disabled by default.  See localOverrides.conf.dist for configuration
# options when enabling Caliper.
$caliper{enabled} = 0;

################################################################################
# PG subsystem options
################################################################################

# List of enabled screen display modes. Comment out any modes you don't wish to
# make available for use.
# The first uncommented option is the default for instructors rendering problems
# in the homework sets editor.
$pg{displayModes} = [
	"MathJax",    # render TeX math expressions on the client side using
	              # MathJax; we strongly recommend people install and use
	              # MathJax, and it is required if you want to use MathView
	"images",     # display math expressions as images generated by dvipng
#	"plainText",  # display raw TeX for math expressions
];

# List of additional display modes for the PG editor only.
$pg{additionalPGEditorDisplayModes} = [
	"tex",    # display tex code for a rendered problem
	"PTX",    # display static PreTeXt XML for a rendered problem
];

##########################################################################################
#### Default settings for homework editor pages
##########################################################################################

# Whether the homework editor pages should show options for conditional release
$options{enableConditionalRelease} = 0;

##########################################################################################
# Searching for set.def files to import
##########################################################################################
# In the set manager and the library browser, the directory depth to search
# within templates for .def files.  Note that this does not apply to the Library
# and Contrib directories.  Those directories are not searched in any case.
$options{setDefSearchDepth} = 4;

##########################################################################################
#### Default settings for the problem editor pages
##########################################################################################

# This sets if the PG editor should use a js based "codemirror" editor or
# just a textarea
$options{PGCodeMirror} = 1;

###########################################################################################
#### Default settings for the PG translator
#### This section controls the display of equations, HINTS, answers, SOLUTIONS,
#### "sticky_answers" a.k.a. showOldAnswers,
#### coloring of answer blanks and the numeric display of entered answers.
###########################################################################################

# Default display mode. Should be listed above (uncomment only one).
$pg{options}{displayMode}        = "MathJax";

# The default grader to use, if a problem doesn't specify.
$pg{options}{grader}             = "avg_problem_grader";

# Fill in answer blanks with the student's last answer by default?
$pg{options}{showOldAnswers}     = 1;

# Note for the useMathQuill and useMathView options, the one that is actually used is ultimately
# determined by the entryAssist PG special environment variable.  Furthermore the user may disable the chosen method and
# fall back to a basic html input in the user settings if the user has the change_pg_display_settings permission.

# Default for showing the MathView preview system.
$pg{options}{useMathView}        = 1;
# This is the operations file to use for mathview,  each contains a different locale.
$pg{options}{mathViewLocale}     = "mv_locale_us.js";

# Default for showing the MathQuill preview system.
$pg{options}{useMathQuill}     = 1;

$pg{options}{showAnsGroupInfo}      = 0;
$pg{options}{showAnsHashInfo}       = 0;
$pg{options}{showPGInfo}            = 0;

# By default hints and solutions are ALWAYS shown for professors (and above) so that they
# can check hints and solutions easily and make corrections.
# To disable this feature set the permission levels
# always_show_hint to "nobody" (by default this is "professor")
# and always_show_solution to "nobody" (by default this is "professor")
# This is done in the %permissions section above.

# Display the "Entered" column which automatically shows the evaluated student answer, e.g. 1 if student input is sin(pi/2).
# If this is set to 0, e.g. to save space in the response area, the student can still see their evaluated answer by hovering
# the mouse pointer over the typeset version of their answer
$pg{options}{showEvaluatedAnswers}      = 1;

# Catch translation warnings internally.  This must be done since the translator is now run in a subprocess and do not
# propogate to the main process.  So this really should never be set to 0.
$pg{options}{catchWarnings}      = 1;

##### Settings for various display modes

# "images" mode has several settings:
$pg{displayModeOptions}{images} = {
	# Determines the method used to align images in output. Can be any valid value for the css vertical-align rule such
	# as 'baseline' or 'middle'.
	dvipng_align => 'baseline',

	# If dbsource is set to a nonempty value, then this database connection information will be used to store dvipng
	# depths.  It is assumed that the 'depths' table exists in the database.
	dvipng_depth_db => {
		dbsource => $database_dsn,
		user     => $database_username,
		passwd   => $database_password,
	},
};

##### Directories used by PG

# The root of the PG directory tree (from pg_dir set in conf/webwork2.mojolicious.yml).
$pg{directories}{root}      = "$pg_dir";
$pg{directories}{lib}       = "$pg{directories}{root}/lib";
$pg{directories}{macros}    = "$pg{directories}{root}/macros";
$pg{directories}{assets}    = "$pg{directories}{root}/assets";
$pg{directories}{assetsTex} = "$pg{directories}{assets}/tex";

#
#  The macro file search path.  Each directory in this list is searched
#  (in this order) by loadMacros() when it looks for a .pl file.
#
$pg{directories}{macrosPath} = [
   ".",                     # search the problem file's directory
   $courseDirs{macros},
   $pg{directories}{macros},
   "$pg{directories}{macros}/answers",
   "$pg{directories}{macros}/capa",
   "$pg{directories}{macros}/contexts",
   "$pg{directories}{macros}/core",
   "$pg{directories}{macros}/graph",
   "$pg{directories}{macros}/math",
   "$pg{directories}{macros}/misc",
   "$pg{directories}{macros}/parsers",
   "$pg{directories}{macros}/ui",
   "$pg{directories}{macros}/deprecated",
];

# Directories to search for auxiliary html files.
$pg{directories}{htmlPath} = [
	".",
	$courseDirs{html},
	$webworkDirs{htdocs},
];

# Directories to search for image files.
$pg{directories}{imagesPath} = [
	".",
	"$courseDirs{html}/images",
	"$webworkDirs{htdocs}/images",
];

# Contains context-sensitive pg help files.
$pg{URLs}{localHelpURL} = "$pg_htdocs_url/helpFiles";

##### "Special" PG environment variables. (Stuff that doesn't fit in anywhere else.)

# Users for whom to print the file name of the PG file being processed.
$pg{specialPGEnvironmentVars}{PRINT_FILE_NAMES_FOR} = [ "professor", ];

# File names are also printed for anyone with this permission or higher
$pg{specialPGEnvironmentVars}{PRINT_FILE_NAMES_PERMISSION_LEVEL} =
	$userRoles{ $permissionLevels{print_path_to_problem} };

# whether to use javascript for rendering Live3D graphs
$pg{specialPGEnvironmentVars}{use_javascript_for_live3d} = 1;

# Binary that the PGtikz.pl and PGlateximage.pl macros will use to create svg images.
# This should be either 'pdf2svg' or 'dvisvgm'.
$pg{specialPGEnvironmentVars}{latexImageSVGMethod} = "dvisvgm";

# When ImageMagick is used for image conversions, this sets the default options.
# See https://imagemagick.org/script/convert.php for a full list of options.
# convert will be called as:
# convert <input options> file.ext1 <output options> file.ext2
$pg{specialPGEnvironmentVars}{latexImageConvertOptions} = {input => {density => 300}, output => {quality => 100}};

   #  set the flags immediately above in the $pg{options} section above -- not here.

# Locations of CAPA resources. (Only necessary if you need to use converted CAPA
# problems.)
################################################################################
# "Special" PG environment variables. (Stuff that doesn't fit in anywhere else.)
################################################################################

 $pg{specialPGEnvironmentVars}{CAPA_Tools}             = "$courseDirs{templates}/Contrib/CAPA/macros/CAPA_Tools/",
 $pg{specialPGEnvironmentVars}{CAPA_MCTools}           = "$courseDirs{templates}/Contrib/CAPA/macros/CAPA_MCTools/",
 $pg{specialPGEnvironmentVars}{CAPA_GraphicsDirectory} = "$courseDirs{templates}/Contrib/CAPA/CAPA_Graphics/",
 $pg{specialPGEnvironmentVars}{CAPA_Graphics_URL}      = "$webworkURLs{htdocs}/CAPA_Graphics/",

 push @{$pg{directories}{macrosPath}},
   "$courseDirs{templates}/Contrib/CAPA/macros/CAPA_Tools",
   "$courseDirs{templates}/Contrib/CAPA/macros/CAPA_MCTools";

 # The link Contrib in the course templates directory should point to ../webwork-open-problem-library/Contrib
 # The link webwork2/htdocs/CAPA_Graphics should point to ../webwork-open-problem-library/Contrib/CAPA/macros/CAPA_graphics
# Size in pixels of dynamically-generated images, i.e. graphs.
$pg{specialPGEnvironmentVars}{onTheFlyImageSize}      = 400,

# To disable the Parser-based versions of num_cmp and fun_cmp, and use the
# original versions instead, set this value to 1.
$pg{specialPGEnvironmentVars}{useOldAnswerMacros} = 0;

# Determines whether or not MathObjects contexts will parse the alternative tokens
# listed in the "alternatives" property (mostly for unicode alternatives for parse tokens).
$pg{specialPGEnvironmentVars}{parseAlternatives} = 0;

# Determines whether or not the MathObjects parser will convert the Full Width Unicode block
# (U+FF01 to U+FF5E) to their corresponding ASCII characters (U+0021 to U+007E) automatically.
$pg{specialPGEnvironmentVars}{convertFullWidthCharacters} = 0;


# Strings to insert at the start and end of the body of a problem
#  (at beginproblem() and ENDDOCUMENT) in various modes.  More display modes
#  can be added if different behaviours are desired (e.g., HTML_dpng,
#  HTML_asciimath, etc.).  These parts are not used in the Library browser.

$pg{specialPGEnvironmentVars}{problemPreamble} = { TeX => '', HTML=> '' };
$pg{specialPGEnvironmentVars}{problemPostamble} = { TeX => '', HTML=>'' };

# this snippet checks to see if Moodle has already called MathJax
# $pg{specialPGEnvironmentVars}{problemPreamble} = { TeX => '', HTML=> <<END_PREAMBLE };
#
#	<script type="text/x-mathjax-config">
#	if (MathJax.Hub.Startup.params.config && MathJax.Hub.config.config.length) {
#	    MathJax.Hub.Config({
#	      config: [],
#	      skipStartupTypeset: false
#	    });
#	  }
#	</script>
# END_PREAMBLE

#
# $pg{specialPGEnvironmentVars}{problemPostamble} = { TeX => '', HTML=> <<END_POSTAMBLE };
#
#
# END_POSTAMBLE

# Note!  problemPreamble and problemPostamble are becoming depreciated,
#        so you probably wouldn't use them
# To have the problem body indented and boxed, uncomment:
#$pg{specialPGEnvironmentVars}{problemPreamble}{HTML} = qq!<div class="problem-content">\n!;
#$pg{specialPGEnvironmentVars}{problemPostamble}{HTML}= qq!</div>\n!;

# To have the problem body indented and boxed, uncomment:
# $pg{specialPGEnvironmentVars}{problemPreamble}{HTML} = '<BLOCKQUOTE>
#    <TABLE BORDER=1 CELLSPACING=1 CELLPADDING=15 BGCOLOR=#E8E8E8><TR><TD>';
# $pg{specialPGEnvironmentVars}{problemPostamble}{HTML} = '</TD></TR></TABLE>
#     </BLOCKQUOTE>';

##### PG modules to load

# The first item of each list is the module to load. The remaining items are
# additional packages to import.
#
# That is: If you wish to include a module MyModule.pm which depends
# on additional modules Dependency1.pm and Dependency2.pm, these
# should appear as [qw(Mymodule.pm, Dependency1.pm, Dependency2.pm)]

${pg}{modules} = [
	[qw(Encode)],
	[qw(Encode::Encoding)],
	[qw(HTML::Parser)],
	[qw(HTML::Entities)],
	[qw(DynaLoader)],
	[qw(Encode)],
	[qw(Exporter )],
	[qw(GD)],
	[qw(AlgParser AlgParserWithImplicitExpand Expr ExprWithImplicitExpand utf8)],
	[qw(AnswerHash AnswerEvaluator)],
	[qw(LaTeXImage)],
	[qw(WWPlot)],    # required by Circle (and others)
	[qw(Circle)],
	[qw(Class::Accessor)],
	[qw(Complex)],
	[qw(Complex1)],
	[qw(Distributions)],
	[qw(Fraction)],
	[qw(Fun)],
	[qw(Hermite)],
	[qw(Label)],
	[qw(ChoiceList)],
	[qw(Match)],
	[qw(MatrixReal1)],    # required by Matrix
	[qw(Matrix)],
	[qw(Multiple)],
	[qw(PGrandom)],
	[qw(Plots::Plot Plots::Axes Plots::Data Plots::Tikz Plots::JSXGraph Plots::GD)],
	[qw(Regression)],
	[qw(Select)],
	[qw(Units)],
	[qw(VectorField)],
	[qw(Parser Value)],
	[qw(Parser::Legacy)],
	[qw(Statistics)],
	[qw(Chromatic)],      # for Northern Arizona graph problems
	[qw(Applet MIME::Base64)],
	[qw(PGcore PGalias PGresource PGloadfiles PGanswergroup PGresponsegroup Tie::IxHash)],
	[qw(Locale::Maketext)],
	[qw(WeBWorK::PG::Localize)],
	[qw(Mojo::JSON)],
	[qw(Rserve Class::Tiny IO::Handle)],
	[qw(DragNDrop)],
	[qw(Types::Serialiser)],
	[qw(strict)],
];

##### Problem creation defaults

# The default weight (also called value) of a problem to use when using the
# Library Browser, Problem Editor, or Sets Manager to add problems to a set
# or when this value is left blank in an imported set definition file.
$problemDefaults{value} = 1;

# The default max_attempts for a problem to use when using the
# Library Browser, Problem Editor, or Sets Manager to add problems to a set
# or when this value is left blank in an imported set definition file.  Note that
# setting this to -1 gives students unlimited attempts.
$problemDefaults{max_attempts} = -1;

# The default showMeAnother for a problem to use when using the
# Library Browser, Problem Editor, or Sets Manager to add problems to a set
# or when this value is left blank in an imported set definition file.  Note that
# setting this to -1 disables the showMeAnother button
$problemDefaults{showMeAnother} = -2;

#The default attempts to open children value to use when adding
# a problem.  This only matters for JITAR sets
$problemDefaults{att_to_open_children} = 1;

#The default counts for parent grade problem value to use when adding
# a problem.  This only matters for JITAR sets
$problemDefaults{counts_parent_grade} = 0;

# The default prPeriod value (re-randomization period) to use for the newly created problem.
# It is suggested to use the value of -1, which means that the course-wide setting would be used
# Setting this to -1 defaults to the use of course-wide settings (suggested)
# Setting this to 0 disables periodic randomization regardless of the course-wide setting
# Setting this to a positive value will override the course-wide setting
$problemDefaults{prPeriod} = -1;

# The default number of attempts after which to show hints for newly created problems.
# It is suggested to use the value of -2, which means that the course-wide setting would be used
# Setting this to -2 defaults to the use of course-wide settings (suggested)
# Setting this to -1 disables hints in problems.
# Setting this to 0 or more will show hints after that number of attempts.
$problemDefaults{showHintsAfter} = -2;

##### Answer evaluatior defaults

$pg{ansEvalDefaults} = {
	functAbsTolDefault            => .001,
	functLLimitDefault            => .0000001,
	functMaxConstantOfIntegration => 1E8,
	functNumOfPoints              => 3,
	functRelPercentTolDefault     => .1,
	functULimitDefault            => .9999999,
	functVarDefault               => "x",
	functZeroLevelDefault         => 1E-14,
	functZeroLevelTolDefault      => 1E-12,
	numAbsTolDefault              => .001,
	numFormatDefault              => "",
	numRelPercentTolDefault       => .1,
	numZeroLevelDefault           => 1E-14,
	numZeroLevelTolDefault        => 1E-12,
	useBaseTenLog                 => 0,
	defaultDisplayMatrixStyle     => "[s]",  # left delimiter, middle line delimiters, right delimiter
	enableReducedScoring          => 0,
	reducedScoringPeriod          => 0, # Default length of Reduced Scoring Period in minutes
	reducedScoringValue           => .75, # Percent of score students receive in Reduced Scoring Period
	assignOpenPriorToDue          => 14400, # a number of minutes (default is 10 days)
	answersOpenAfterDueDate       => 2880 # number of minutes (default is 2 days)
};



################################################################################
# Compatibility
################################################################################

# Define the old names for the various "root" variables.
$webworkRoot    = $webworkDirs{root};
$webworkURLRoot = $webworkURLs{root};
$pgRoot         = $pg{directories}{root};



################################################################################
# Webservices
################################################################################
# The following options only apply to actions performed via requests to $webwork_url/instructor_rpc.
$webservices = {
	# Enable createCourse, addUser, dropUser, deleteUser, editUser, and changeUserPassword
	enableCourseActions => 0,
	# Enable logging of course actions via webservices.  Will log when courses are created and when students are added,
	# dropped, deleted, edited, or have password changed.
	enableCourseActionsLog => 0,
	courseActionsLogfile   => "$webworkDirs{logs}/courseactions.log",
};

###############################################################################
# Math entry assistance
###############################################################################

$pg{specialPGEnvironmentVars}{entryAssist} = 'MathQuill';

###############################################################################
# Default Set settings
###############################################################################

# Time of day that newly created sets are set to be due.  This should not be a
# localized string, and is never used for display purposes.
$pg{timeAssignDue} = '11:59pm';

# Number of minutes prior to due date that newly created sets
# are set to open.
$pg{assignOpenPriorToDue} = 10080;

# Number of minutes after due date that newly created sets are
# set for answers to be made available;
$pg{answersOpenAfterDueDate} = 2880;

###############################################################################
# Default Test settings
###############################################################################

# Cap for the number of problems that can be used on a page.
# If 0, there is no cap. Otherwise, should be a positive integer.
$test{maxProblemsPerPage} = 0;

###############################################################################
# Progress Bar switch
###############################################################################
$pg{options}{enableProgressBar} = 1;

################################################################################
# Site wide overrides are entered into the file localOverrides.conf
################################################################################
include("conf/localOverrides.conf");

1; #final line of the file to reassure perl that it was read properly.
