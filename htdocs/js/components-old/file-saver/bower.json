{
  "name": "file-saver",
  "version": "0.0.0",
  "main": "./FileSaver.js",
  "dependencies": {},
  "gitHead": "00cebdabb3e5e9013c5113aaf967350f1dcf59cb",
  "readme": "FileSaver.js\n============\n\nFileSaver.js implements the HTML5 W3C `saveAs()` [FileSaver][1] interface in browsers that do\nnot natively support it. There is a [FileSaver.js demo][2] that demonstrates saving\nvarious media types.\n\nFileSaver.js is the solution to saving files on the client-side, and is perfect for\nwebapps that need to generate files, or for saving sensitive information that shouldn't be\nsent to an external server.\n\n\nSupported Browsers\n------------------\n\n| Browser        | Constructs as | Filenames    | Size       | Dependancies |\n| -------------- | ------------- | ------------ | ---------- | ------------ |\n| Firefox 20+    | Blob          | Yes          | 800MiB/per | None         |\n| Firefox ≤ 19   | data: URI     | No           |            | [Blob.js](https://github.com/eligrey/Blob.js) |\n| Chrome         | Blob          | Yes          | 345MiB/per | None         |\n| Chrome for Android v28+ | Blob      | Yes          |            | None         |\n| IE 10+         | Blob          | Yes          | 600MiB/per | None         |\n| Opera Next     | Blob          | Yes          |            | None         |\n| Opera < 15     | data: URI     | No           |            | [Blob.js](https://github.com/eligrey/Blob.js) |\n| Safari ≤ 6     | data: URI     | No           |            | [Blob.js](https://github.com/eligrey/Blob.js) |\n\nNote: Unlisted versions or browsers will probably work too; however only the ones listed above have been tested.\n\nFeature detection is possible:\n\n    try { var isFileSaverSupported = !!new Blob(); } catch(e){}\n\nSyntax\n------\n\n    FileSaver saveAs(in Blob data, in DOMString filename)\n\nExamples\n--------\n\n### Saving text\n\n    var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, \"hello world.txt\");\n\nThe standard W3C File API [`Blob`][3] interface is not available in all browsers.\n[Blob.js][4] is a cross-browser `Blob` implementation that solves this.\n\n### Saving a canvas\n\n    var canvas = document.getElementById(\"my-canvas\"), ctx = canvas.getContext(\"2d\");\n\t// draw to canvas...\n    canvas.toBlob(function(blob) {\n        saveAs(blob, \"pretty image.png\");\n    });\n\nNote: The standard HTML5 `canvas.toBlob()` method is not available in all browsers.\n[canvas-toBlob.js][5] is a cross-browser `canvas.toBlob()` that polyfills this.\n\n### Aborting a save\n\n    var filesaver = saveAs(blob, \"whatever\");\n    cancel_button.addEventListener(\"click\", function() {\n        if (filesaver.abort) {\n            filesaver.abort();\n        }\n    }, false);\n\nThis isn't that useful unless you're saving very large files (e.g. generated video).\n\n![Tracking image](https://in.getclicky.com/212712ns.gif)\n\n  [1]: http://www.w3.org/TR/file-writer-api/#the-filesaver-interface\n  [2]: http://eligrey.com/demos/FileSaver.js/\n  [3]: https://developer.mozilla.org/en-US/docs/DOM/Blob\n  [4]: https://github.com/eligrey/Blob.js\n  [5]: https://github.com/eligrey/canvas-toBlob.js\n",
  "readmeFilename": "README.md",
  "_id": "FileSaver@1.0.0",
  "description": "FileSaver.js ============",
  "commit": "00cebdabb3e5e9013c5113aaf967350f1dcf59cb",
  "repository": {
    "type": "git",
    "url": "git://github.com/eligrey/FileSaver.js.git"
  }
}