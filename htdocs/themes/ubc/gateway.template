<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<!--
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2007 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: gateway.template $
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################
-->

<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<title><!--#path style="text" text=" : " textonly="1"--></title>
<!--#head-->
<style type="text/css">

/********************/
/* template classes */
/********************/

body { margin: 0px; }

/* left table cell, contains logo and menus */
td.LeftPanel { background-color: #003366; color: white; white-space: nowrap; width: 1em; }
td.LeftPanel a:link,
td.LeftPanel a:visited { color: #FF9933; }

div.Logo {  }
div.Links { font-size: small; }
div.Siblings { font-size: small; }
div.Options { font-size: small; }

/* top table cell, contains login message and path */
td.TopPanel { background-color: #003366; color: white; height: 1; }
td.TopPanel a:link,
td.TopPanel a:visited { color: #FF9933; }


*.LoginStatus { text-align: right; font-size: small; position:absolute; right: 0; }
td.Timestamp   { text-align: left;  font-size: small; font-style: italic; }

*.Path {  }

/* main content panel, contains body */
td.ContentPanel { background-color: white; color: black; }
td.ContentPanel a:link,
td.ContentPanel a:visited { color: blue; }
td.ContentPanel a:active { color: red; }

/* contains info */
td.InfoPanel { background-color: #DDDDDD; color: black; width: 15% }
td.InfoPanel a:link,
td.InfoPanel a:visited { color: blue; }
td.InfoPanel a:active { color: red; }

div.Info {  }
div.Nav {  }
div.Title { font-size: 16pt; }
div.SubmitError { color: red; font-style: italic; }
div.Message { font-style: italic; }
div.Body {  }
div.Warnings {  }

/* background colors for success and failure messages */
div.ResultsWithoutError { background-color: #66ff99 } /* light green */
div.ResultsWithError    { background-color: #ffcccc } /* light red */

/* text colors for published and unpublished sets */
font.Published   { font-style: normal; font-weight: bold;   color: #000000; } /* black */
font.Unpublished { font-style: italic; font-weight: normal; color: #aaaaaa; } /* light grey */

/* text colors for Auditing, Current, and Dropped students */
div.Audit	{ font-style: normal;	color: black; }
div.Enrolled	{ font-weight: bold;	color: black; }
div.Drop	{ font-style: italic;	color: grey; }

/*******************/
/* general classes */
/*******************/

p.emphasis { font-style:italic; }

/************************/
/* new standard classes */
/************************/

/* tables used for laying out form fields shouldn't have a border */
table.FormLayout { border: 0; }
table.FormLayout tr { vertical-align: top; }
table.FormLayout th.LeftHeader { text-align: right; white-space: nowrap; }
table.FormLayout tr.ButtonRow { text-align: left; }
table.FormLayout tr.ButtonRowCenter { text-align: center; }

/* for problems which are rendered by themselves, e.g., by Set Maker */
div.RenderSolo { background-color: #E0E0E0; color: black; }

/* minimal style for lists of links (generated by the links escape) */
ul.LinksMenu { list-style: none; margin-left: 0; padding-left: 0; }
ul.LinksMenu ul { list-style: none; margin-left: 0.5em; padding-left: 0; }

/*************************/
/* WeBWorK::HTML widgets */
/*************************/

/* WeBWorK::HTML::ScrollingRecordList */
div.ScrollingRecordList { padding: 1em; white-space: nowrap; border: thin solid gray; }
div.ScrollingRecordList select.ScrollingRecordList { width: 99%; }

/*************************************************************************/
/* classes used in Problem.pm (replace these with new standard classes?) */
/*************************************************************************/

table.attemptResults {
	border-style: outset; 
	border-width: 1px; 
	margin: 0px 10pt; 
	border-spacing: 1px;
}
table.attemptResults td,
table.attemptResults th {
	border-style: inset; 
	border-width: 1px; 
	text-align: center; 
	width: 15ex;
	background-color: #DDDDDD;
}
div.problemHeader { float: left; }
div.problem { clear: both; background-color: #E0E0E0; color: black; }
.parsehilight { background-color:yellow; }

</style>

<style type="text/css">
/******************/
/* gateway styles */
/******************/

div.gwMessage { background-color:#dddddd; color: black; }
div.gwTiming { 
	background-color:#ddddff; 
	color: black; 
	margin-top: 10px;
	margin-bottom: 0px;
}
div.gwWarning { background-color:#ffffdd; color: black; }

span.resultsWithError { background-color: #ffcccc; color: black; }
span.resultsWithoutError { background-color: #66ff99; color: black; }
div.gwCorrect { background-color: #66ff99; color: black; }
div.gwIncorrect { background-color: #ff9999; color: black; }

div.gwProblem {
	clear: both; 
	background-color: #E0E0E0; 
	color: black;
	padding: 3px;
	border: solid black 1px;
}
div.gwSoln {
/*	background-color: #e0e0ff; */
	background-color: transparent;
	color: black;
/* 	padding: 2px; */,
/* 	border: dashed black 1px; */
}
div.gwSoln b { color: navy; }

p.gwPreview { 
	font-size: smaller;
	text-align: right; 
	margin-top: 0px;
	margin-bottom: 0px;
}

table.gwAttemptResults {
	border-width: 0px;
}
table.gwAttemptResults td.label { 
	font-weight: bold; 
	background-color: transparent;
	color: navy;
}
table.gwAttemptResults td.output {
        padding: 2px;
	border: solid black 1px;
	background-color: #eeeeee;
}

</style>
<script language="javascript" type="text/javascript">
function jumpTo(ref) {  // scrolling javascript function
    if ( ref ) {
        var pn = ref - 1; // we start anchors at 1, not zero
        if ( navigator.appName == "Netscape" && 
             parseFloat(navigator.appVersion) < 5 ) {
            var xpos = document.anchors[pn].x;
            var ypos = document.anchors[pn].y;
        } else {
            var xpos = document.anchors[pn].offsetLeft;
            var ypos = document.anchors[pn].offsetTop;
        }
        if ( window.scrollTo == null ) { // cover for anyone
            window.scroll(xpos,ypos);    //   lacking js1.2
        } else {
            window.scrollTo(xpos,ypos);
        }
    }
    return false; // prevent link from being followed
}

// timer for gateway 
var theTime = -1;      // -1 before we've initialized
var alerted = -1;      // -1 = no alert set; 1 = 1st alert set
                       // this shouldn't really be needed

function runtimer() {
// aesthetically this is displeasing: we're assuming that the 
// ContentGenerator will put the appropriate form elements in that
// page for us to manipulate.  even with error checking, it seems sort
// of odd.
    if ( document.gwtimer == null ) {  // no timer
        return;
    } else {
        var tm = document.gwtimer.gwtime;
        var st = document.gwtimer.gwpagetimeleft.value;

        if ( st == 0 ) {                  // no time limit
            return;
        } else {
            if ( theTime == -1 ) {
                theTime = st;
                tm.value = toMinSec(theTime);
                setTimeout("runtimer()", 1000);  // 1000 ms = 1 sec
            } else if ( theTime == 0 && alerted != 3 ) {
	        alert("* You are out of time! *");
		alerted = 3;
	    } else if ( alerted != 3 ) {
	        theTime--;
                tm.value = toMinSec(theTime);
                setTimeout("runtimer()", 1000);  // 1000 ms = 1 sec
		if ( theTime == 35 && alerted != 2 ) { // time is in seconds
		    alert("* You have only about 30 seconds to complete " +
		          "this assignment.  Press Grade very soon! *\n" +
			  "* The timer stops while this alert box is open. *");
		    alerted = 2;
		    theTime -= 5;
                } else if ( theTime == 75 && alerted != 1) {
		    alert("* You have only about a minute left " +
		          "to complete this assignment! *\n" +
			  "* The timer stops while this alert box is open. *");
                    alerted = 1;
		    theTime -= 5;
                }
            }
        }
    }
}
function toMinSec(t) {
// convert to min:sec
    mn = Math.floor(t/60);
    sc = t - 60*mn;
    if ( mn < 10 && mn > -1 ) {
        mn = "0" + mn;
    }
    if ( sc < 10 ) {
        sc = "0" + sc;
    }
    return mn + ":" + sc;
}
</script>
</head>
<body onload="runtimer();">
<table width="100%" cellpadding="10" cellspacing="0" border="0">
	<tr valign="top">
<!-- removed left sidebar -->
		<!--#if can="info"-->
		<td class="TopPanel" colspan="2">
		<!--#else-->
		<td class="TopPanel" >
		<!--#endif-->
		    <div style="position:relative; width:100%;">
				<!--#if can="path"-->
				<span class="Path">
					<!--#path style="text" image="/webwork2_files/images/right_arrow.png" text=" > "-->
				</span>
				<!--#endif-->
				
				<!--#if loggedin="1"-->
					<!--#if can="loginstatus"-->
					
					<span class="LoginStatus">			
						
						<!--#loginstatus-->
					</span>
					<!--#endif-->
				<!--#endif-->
			</div>
		</td>
	</tr>
	<tr valign="top">
		<!--#if warnings="1"-->
		<td class="ContentPanelError" bgcolor="#ffcccc">
		<!--#else-->
		<td class="ContentPanel" bgcolor="#ffffff">
		<!--#endif-->	
<!-- removed nav button to go up -->
			<!--#if can="title"-->
			<div class="Title">
				<!--#title-->
			</div>
			<!--#endif-->
			<!--#if can="message"-->
				<div class="Message">
					<!--#message-->
				</div>
			<!--#endif-->

			<!--#if can="submiterror"-->
				<div class="SubmitError">
					<!--#submiterror-->
				</div>
			<!--#endif-->
			<!--#if can="body"-->
			<div class="Body">
				<!--#body-->
			</div>
			<!--#endif-->
			<!--#if warnings="1"-->
			<hr>
			<div class="Warnings">
				<!--#warnings-->
			</div>
			<!--#endif-->
			<!--#if can="message"-->
				<div class="Message">
					<!--#message-->
				</div>
			<!--#endif-->
		</td>
		<!--#if can="info"-->
		<td class="InfoPanel">
			<div class="Info">
				<!--#info-->
			</div>
		</td>
		<!--#endif-->
 	</tr>
 	<tr>
 	    <td class = "Timestamp", colspan=3>
 	        Updated: <!--#timestamp-->
 	    </td>
 	</tr>
</table>
</body>
</html>
