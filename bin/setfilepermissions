#!/usr/bin/env perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright &copy; 2000-2022 The WeBWorK Project, https://github.com/openwebwork
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

=head1 NAME

setfilepermissions - set the file permissions for webwork

=head1 SYNOPSIS

 sudo -E setfilepermissions

=head1 DESCRIPTION

Set the file permissions for webwork

=cut

use strict;
use warnings;

BEGIN {
	use Mojo::File qw(curfile);
	use YAML::XS qw(LoadFile);
	use Env qw(WEBWORK_ROOT PG_ROOT);

	$WEBWORK_ROOT = curfile->dirname->dirname;

	# Load the configuration file to obtain the PG root directory.
	my $config_file = "$WEBWORK_ROOT/conf/webwork2.mojolicious.yml";
	$config_file = "$WEBWORK_ROOT/conf/webwork2.mojolicious.dist.yml" unless -e $config_file;
	my $config = LoadFile($config_file);
	$PG_ROOT = $config->{pg_dir};

	die "The pg directory must be correctly defined in conf/webwork2.mojolicious.yml" unless -e $ENV{PG_ROOT};
}

use lib "$ENV{WEBWORK_ROOT}/lib";
use lib "$ENV{PG_ROOT}/lib";
use WeBWorK::CourseEnvironment;
my $ce = WeBWorK::CourseEnvironment->new({ webwork_dir => $ENV{WEBWORK_ROOT}, pg_dir => $ENV{PG_ROOT} });

# who is really running this script (even if sudo'ed)
# We set relevant directories so that script runner owns them
# and the web server can write to them
my $me = `logname`;
chomp($me);

my $servergroup = $ce->{server_groupID};

if (!$me) {
	die 'Aborting: No login name available.';
}

if (!$servergroup) {
	die "Aborting: server_groupID not set - so cannot do the chgrp calls. Check your conf/site.conf file.";
}

my $wwroot = $ENV{WEBWORK_ROOT};

# Course directories
system("chown -R $me " . $ce->{webwork_courses_dir});
system("chgrp -R $servergroup " . $ce->{webwork_courses_dir});
system("chmod -R g+w " . $ce->{webwork_courses_dir});
system("chmod g+s " . $ce->{webwork_courses_dir});

# Other special directories under webwork2
for my $dir ('DATA', 'htdocs_temp', 'logs', 'tmp') {
	system("chown -R $me $ce->{webworkDirs}{$dir}");
	system("chgrp -R $servergroup $ce->{webworkDirs}{$dir}");
	system("chmod -R g+w $ce->{webworkDirs}{$dir}");
	system("chmod g+s $ce->{webworkDirs}{$dir}");
}

# The server should not be able to write to the OPL (for most sites)

my $libroot = $ce->{problemLibrary}->{root};

system("chown -R $me $libroot");
system("chmod -R 755 $libroot");

# OPL-update needs to be able to write to this directories
# Let's hope the same user does it
# This will need adjusting if the admin course starts running this script
system("chown -R $me $ce->{webworkDirs}{htdocs}/DATA");
