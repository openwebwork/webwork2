#!/usr/bin/perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2007 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: webwork2/bin/wwdb,v 1.13 2006/01/25 23:13:45 sh002i Exp $
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

=head1 NAME

wwdb - export and import webwork databases.

=head1 SYNOPSIS

 wwdb [-f] course { import | export } file [table ...]

=head1 DESCRIPTION

Exports data from a course database to an XML file, or imports data from an XML
file to a course database. Optionally restrict which tables are imported or
exported and specify a duplicate policy.

=head1 OPTIONS

=over

=item -f

Overwite duplicate records.

=item course

Course to use for import or export.

=item { import | export }

Specify action -- export or import data.

=item file

XML file to write to (in the case of export) or read from (in the case of
import).

=item [table ...]

If specified, only the listed tables will be imported or exported.

=back

=cut

use strict;
use warnings;
use Getopt::Std;

BEGIN {
	die "WEBWORK_ROOT not found in environment.\n"
		unless exists $ENV{WEBWORK_ROOT};
}

use lib "$ENV{WEBWORK_ROOT}/lib";
use WeBWorK::CourseEnvironment;
use WeBWorK::DB;
use WeBWorK::Utils::DBImportExport qw/listTables dbExport dbImport/;

sub usage {
	print STDERR "usage: $0 [-f] course { import | export } file [table ...]\n";
	print STDERR "tables: ", join(" ", listTables()), "\n";
	exit 1;
}

our $opt_f;
getopts("f");

my ($course, $command, $file, @tables) = @ARGV;

usage() unless $course and $command and $file;

my $ce = WeBWorK::CourseEnvironment->new({
	webwork_dir => $ENV{WEBWORK_ROOT},
	courseName => $course,
});

my $db = WeBWorK::DB->new($ce->{dbLayout});

my @errors;

if ($command eq "export") {
	my $fh;
	if ($file eq "-") {
		$fh = *STDOUT;
	} else {
		open $fh, ">", $file or die "failed to open file '$file' for writing: $!\n";
	}
	@errors = dbExport(
		db => $db,
		xml => $fh,
		tables => \@tables,
	);
	close $fh;
} elsif ($command eq "import") {
	my $conflict = ($opt_f ? "replace" : "skip");
	open my $fh, "<", $file or die "failed to open file '$file' for writing: $!\n";
	@errors = dbImport(
		db => $db,
		xml => $fh,
		tables => \@tables,
		conflict => $conflict,
	);
	close $fh;
} else {
	die "$command: unrecognized command.\n";
}

if (@errors) {
	warn "The following errors occured:\n", map { "* $_\n" } @errors;
	exit 1;
}
