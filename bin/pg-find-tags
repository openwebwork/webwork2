#!/usr/bin/env perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2007 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: webwork2/bin/pg-find-tags,v 1.1 2007/10/17 16:56:16 sh002i Exp $
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
# 
# Contributed by W.H. Freeman; Bedford, Freeman, and Worth Publishing Group.
################################################################################

use strict;
use warnings;

use Data::Dumper;# $Data::Dumper::Indent = 0;
use File::Find;
use Getopt::Long;
use IO::Handle;

BEGIN {
	die "WEBWORK_ROOT not found in environment.\n"
		unless exists $ENV{WEBWORK_ROOT};
}

use lib "$ENV{WEBWORK_ROOT}/lib";
use WeBWorK::NPL qw/gen_find_tags/;

sub main {
	my ($pattern, @paths) = @_;
	my $oldfh = select(STDERR); $|=1; select(STDOUT); $|=1; select($oldfh);
	my $wanted = gen_find_tags($pattern, \&report);
	find({ wanted=>$wanted, no_chdir=>1, }, @paths);
}

sub report {
	my ($name, $tags) = @_;
	print "$name\n";
}

my %o;
GetOptions(\%o,
	"DESCRIPTION=s",
	"KEYWORDS=s",
	"DBsubject=s",
	"DBchapter=s",
	"DBsection=s",
	"Date=s",
	"Institution=s",
	"Author=s",
	"title=s",
	"edition=s",
	"author=s",
	"chapter=s",
	"section=s",
	"problem=s",
);
main(\%o, @ARGV);

__END__

=head1 NAME

pg-find-tags - Search for PG files that contain the specified metadata tags.

=head1 SYNOPSIS

	pg-find-tags ~/MyLibrary /ww/OtherLibrary --author=Rogawski --edition=1

=head1 DESCRIPTION

Recusively searches the paths given for PG files containing all of the specified
tags. Output is the path to each matching file. Legal tags are as follows:

B<Global fields:>

	--DESCRIPTION=STRING
	--KEYWORDS=STRING
	--DBsubject=STRING
	--DBchapter=STRING
	--DBsection=STRING
	--Date=STRING
	--Institution=STRING
	--Author=STRING

B<Text-specific fields:>

	--title=STRING
	--edition=STRING
	--author=STRING
	--chapter=STRING
	--section=STRING
	--problem=STRING

If multiple text-specific fields are given, then all must match for a single
textbook.

=head1 LIMITATIONS

Doesn't support full boolean searches, and it probably should. Can only match on
full strings, so you can't match on a single keyword, for example.

=cut
