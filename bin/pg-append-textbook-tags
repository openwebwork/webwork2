#!/usr/bin/env perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2007 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: webwork2/bin/pg-append-textbook-tags,v 1.1 2007/10/17 16:56:16 sh002i Exp $
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
# 
# Contributed by W.H. Freeman; Bedford, Freeman, and Worth Publishing Group.
################################################################################

use strict;
use warnings;

use IO::File;
use Data::Dumper;# $Data::Dumper::Indent = 0;
use Getopt::Long;

BEGIN {
	die "WEBWORK_ROOT not found in environment.\n"
		unless exists $ENV{WEBWORK_ROOT};
}

use lib "$ENV{WEBWORK_ROOT}/lib";
use WeBWorK::NPL qw/read_tags format_tags/;

sub main {
	my ($new_tags, @files) = @_;
	$new_tags = { textbooks=>[$new_tags] };
	foreach my $file (@files) {
		add_tags_to_file($new_tags, $file);
	}
}

sub add_tags_to_file {
	my ($new_tags, $file) = @_;
	
	my $pgfile = new IO::File($file, '+<:utf8') or do {
		warn "Failed to open file $file for editing: $!\n";
		warn "New tags will not be written to this file.\n";
		return;
	};
	
	my $old_tags = {};
	read_tags($pgfile, $old_tags, 1); # 1==extra_editing_info
	my $pos = $old_tags->{_pos};
	my $rest = $old_tags->{_rest};
	my $maxtextbook = $old_tags->{_maxtextbook};
	print "pos=$pos maxtextbook=$maxtextbook\n";
	
	my @tagstrings = format_tags($new_tags, $maxtextbook+1);
	
	seek $pgfile, $pos, 0;
	foreach my $string (@tagstrings) {
		$string =~ s/^/## /gm;
		print $pgfile "$string\n";
	}
	print $pgfile $rest;
}

my %o;
GetOptions(\%o,
	"title=s",
	"edition=s",
	"author=s",
	"chapter=s",
	"section=s",
	"problem=s",
);
main(\%o, @ARGV);

__END__

=head1 NAME

pg-append-text-tags -- Add textbook tags to a PG file.

=head1 SYNOPSIS

	pg-append-text-tags file1.pg file2.pg --author=Rogawski \
	--title='Calculus: Early Transcendentals' --edition=1 \
	--chapter=3 --section=1 --problem=11,13

=head1 DESCRIPTION

This script appends metadata tags for a new textbook to one or more PG files.
Tags are given as switches on the command line:

	--title=STRING
	--edition=STRING
	--author=STRING
	--chapter=STRING
	--section=STRING
	--problem=STRING

More than one problem can be specified for B<--problem> by passing a
comma-separated list.

=head1 LIMITATIONS

Only adds tags for a new textbook, can't rewrite existing tags, can't remove
tags.

At some point I will write Tie::PGFile, which will allow direct editing of tags
just by modifying a hash, and that will fix all of these problems. :)

=cut
