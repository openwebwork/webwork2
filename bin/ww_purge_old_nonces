#!/usr/bin/env perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright &copy; 2000-2022 The WeBWorK Project, https://github.com/openwebwork
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

=head1 NAME

ww_purge_old_nonces   Delete nonce records from Key table for timestamps
	that are older than ten seconds.

=head1 SYNOPSIS

 ww_purge_old_nonces  course

=head1 DESCRIPTION

Deletes nonce records from the Key table if their timestamps
are more than 10 seconds old.


=head1 OPTIONS

=over

=item course

Course for which old nonces should be deleted.

=back

=cut

use strict;
use warnings;

BEGIN {
	use Mojo::File qw(curfile);
	use YAML::XS qw(LoadFile);
	use Env qw(WEBWORK_ROOT PG_ROOT);

	$WEBWORK_ROOT = curfile->dirname->dirname;

	# Load the configuration file to obtain the PG root directory.
	my $config_file = "$WEBWORK_ROOT/conf/webwork2.mojolicious.yml";
	$config_file = "$WEBWORK_ROOT/conf/webwork2.mojolicious.dist.yml" unless -e $config_file;
	my $config = LoadFile($config_file);
	$PG_ROOT = $config->{pg_dir};

	die "The pg directory must be correctly defined in conf/webwork2.mojolicious.yml" unless -e $ENV{PG_ROOT};
}

use lib "$ENV{WEBWORK_ROOT}/lib";
use lib "$ENV{PG_ROOT}/lib";
use WeBWorK::CourseEnvironment;
use WeBWorK::DB;

use constant NONCE_LIFETIME => 21600; # 6 hours

sub usage {
	print STDERR "usage: $0  course \n";
	exit 1;
}

my ($course) = @ARGV;

usage() unless $course ;

my $ce = WeBWorK::CourseEnvironment->new({
	webwork_dir => $ENV{WEBWORK_ROOT},
	pg_dir      => $ENV{PG_ROOT},
	courseName  => $course,
});

my $db = WeBWorK::DB->new($ce->{dbLayout});

my @errors;

my @listKeys = $db -> listKeys();

foreach my $user_id (@listKeys) {
	my $Key;
	eval { $Key = $db->getKey($user_id);};
	if ($@) { push @errors, "$user_id: ". $@ ;}
	else {
		if ($Key->key eq "nonce" &&
			(time()-$Key->timestamp > NONCE_LIFETIME)
		) {
			eval {$db->deleteKey($user_id);};
			if ($@) { push @errors, "$user_id: ". $@ ;}
		}
	}
}


if (@errors) {
	warn "The following errors occured:\n", map { "* $_\n" } @errors;
	exit 1;
}
