#!/usr/bin/env perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2003 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: webwork-modperl/bin/mksqldb,v 1.1 2004/01/04 07:20:33 sh002i Exp $
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

=head1 NAME

mksqldb - generate SQL statments defining a course database

=head1 SYNOPSIS

 mksqldb COURSEID | mysql -u root -p

=head1 DESCRIPTION

Generates and prints SQL statments defining a course database. These statements
can then be piped to the SQL console of your choice.

In addition to executing the statements generated by this utility, you must
also grant the WeBWorK system permission to access your database server. Since
this is a database-specific process, it is beyond the scope of this utility.

=head1 OPTIONS

=over

=item I<COURSEID>

The name of the course for which to generate statements.

=back

=cut

use strict;
use warnings;

sub usage {
	print STDERR "usage: $0 COURSEID\n";
	exit;
}

my $courseID = shift;

unless ($courseID) {
	print STDERR "$0: must specify COURSEID.\n";
	usage();
};

my $database = "webwork_$courseID";

print <<EOF;
CREATE DATABASE $database;
USE $database;
CREATE TABLE user (
	user_id VARCHAR(255) NOT NULL PRIMARY KEY,
	first_name TEXT,
	last_name TEXT,
	email_address TEXT,
	student_id TEXT,
	status TEXT,
	section TEXT,
	recitation TEXT,
	comment TEXT
);
CREATE TABLE password (
	user_id VARCHAR(255) NOT NULL PRIMARY KEY,
	password TEXT
);
CREATE TABLE permission (
	user_id VARCHAR(255) NOT NULL PRIMARY KEY,
	permission INT
);
CREATE TABLE key_not_a_keyword (
	user_id VARCHAR(255) NOT NULL PRIMARY KEY,
	key_not_a_keyword TEXT,
	timestamp INT
);
CREATE TABLE set_not_a_keyword (
	set_id VARCHAR(255) NOT NULL PRIMARY KEY,
	set_header TEXT,
	problem_header TEXT,
	open_date INT,
	due_date INT,
	answer_date INT,
	published INT
);
CREATE TABLE set_user (
	user_id VARCHAR(255) NOT NULL,
	set_id VARCHAR(255) NOT NULL,
	psvn INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	set_header TEXT,
	problem_header TEXT,
	open_date INT,
	due_date INT,
	answer_date INT,
	published INT
);
CREATE TABLE problem (
	set_id VARCHAR(255) NOT NULL,
	problem_id VARCHAR(255) NOT NULL,
	source_file TEXT,
	value INT,
	max_attempts INT
);
CREATE TABLE problem_user (
	user_id VARCHAR(255) NOT NULL,
	set_id VARCHAR(255) NOT NULL,
	problem_id VARCHAR(255) NOT NULL,
	source_file TEXT,
	value INT,
	max_attempts INT,
	problem_seed INT,
	status FLOAT,
	attempted INT,
	last_answer TEXT,
	num_correct INT,
	num_incorrect INT
);
EOF

=head1 BUGS

Only tested with MySQL.

=head1 AUTHOR

Written by Sam Hathaway, hathaway at users.sourceforge.net.

=cut
